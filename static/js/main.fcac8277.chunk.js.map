{"version":3,"sources":["Utility.js","Class.js","Quarter.js","Year.js","Content.js","ContributionCourse.js","Contribution.js","SearchClass.js","AddButtons.js","Search.js","Info.js","TaskBar.js","Alert.js","App.js","index.js"],"names":["encodeCourse","courseName","sp","split","subj","num","courses","majors","id","Utility","convertDistros","distros","strings","i","length","parseInt","push","getTotalCredits","data","total","y","q","c","parseFloat","units","checkPrereq","courseData","year","quarter","prereqs","foundPrereqs","j","getCourse","name","course","getCourseColor","color","loadData","key","val","substring","classes","classData","failed","forEach","encodedCourse","major_ids","decodeCourse","sort","a","b","localeCompare","e","console","error","saveData","params","URLSearchParams","map","join","set","window","history","replaceState","location","pathname","toString","convertYear","convertQuarter","title","prereqColor","Class","this","props","isDragging","connectDragSource","className","onClick","alert","subtitle","message","description","confirmButton","confirmButtonColor","iconBackgroundColor","icon","delCourse","React","Component","DragSource","beginDrag","monitor","component","endDrag","didDrop","getDropResult","moved","connect","dragSource","Quarter","state","hovered","prevProps","isOver","setState","content","index","connectDropTarget","DropTarget","drop","item","getItem","addCourse","dropTarget","isOverCurrent","shallow","canDrop","itemType","getItemType","Year","quarters","yi","qi","courseIndex","addSummerQuarter","Content","years","ContributionCourseOffered","type","value","ContributionCoursePrereqs","inputs","ContributionCourse","multiple","removeCourse","dragCourse","Contribution","shown","isEmpty","splice","cc","s","SearchClass","prereq","distroStrings","toUpperCase","select","AddButton","action","text","AddButtonSection","withSummer","withoutSummer","size","AddButtons","sections","MiniContentBlock","Search","search","current","toLowerCase","searchMessage","filtered","filter","includes","replace","courseList","count","singleClassView","searchField","placeholder","onChange","event","target","selectedClass","addButtons","exitButton","getResults","Info","version","TaskBarButton","span","active","TaskBar","cancelButton","open","textView","href","navigator","clipboard","writeText","allowAddYear","addYear","switches","contribution","setSwitch","Alert","useState","isOpen","setIsOpen","cancelButtonRef","useRef","close","onClose","initialFocus","Overlay","Title","as","onConfirm","ref","VERSION","App","par","startsWith","newData","defaultAlert","alertData","showAlert","DndProvider","backend","HTML5Backend","postShowAlert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcac8277.chunk.js","sourcesContent":["import courses from './data/courses.json';\n\nfunction encodeCourse(courseName) {\n\n    let sp = courseName.split(' ');\n\n    let subj = sp[0];\n    let num = sp[1];\n\n    let id = courses.majors[subj].id;\n\n    return id + '_' + num;\n\n}\n\nfunction decodeCourse(encodedCourse) {\n    \n    let sp = encodedCourse.split('_');\n\n    let id = sp[0];\n    let num = sp[1];\n\n    let subj = courses.major_ids[id];\n\n    return subj + ' ' + num;\n    \n}\n\nlet Utility = {\n\n    convertDistros: distros => {\n\n        let strings = [];\n\n        if (!distros) return strings;\n\n        for (let i = 0; i < distros.length; i++) {\n\n            let d = parseInt(distros[i]);\n\n            switch (d) {\n                case 1:\n                    strings.push('Natural Sciences')\n                    break;\n                case 2:\n                    strings.push('Formal Studies')\n                    break;\n                case 3:\n                    strings.push('Social and Behavioral Sciences')\n                    break;\n                case 4:\n                    strings.push('Historical Studies')\n                    break;\n                case 5:\n                    strings.push('Ethics and Values')\n                    break;\n                case 6:\n                    strings.push('Literature and Fine Arts')\n                    break;\n                default:\n                    strings.push('Unknown')\n                    break;\n            }\n\n        }\n\n        return strings;\n\n    },\n\n    getTotalCredits: data => {\n\n        let total = 0;\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n                    total += parseFloat(data[y][q][c].units);\n                }\n            }\n        }\n\n        return total;\n\n    },\n\n    checkPrereq: (courseData, year, quarter, data) => {\n\n        if (!courseData.prereqs || courseData.prereqs.length === 0) {\n            return true;\n        }\n\n        for (let i = 0; i < courseData.prereqs.length; i++) {\n\n            let prereqs = courseData.prereqs[i];\n            let foundPrereqs = [];\n\n            for (let y = 0; y <= year; y++) {\n                for (let q = 0; q < data[y].length; q++) {\n\n                    if (y === year && q > quarter) break;\n\n                    for (let j = 0; j < prereqs.length; j++) {\n\n                        for (let c = 0; c < data[y][q].length; c++) {\n\n                            if (data[y][q][c].id === prereqs[j]) {\n                                foundPrereqs.push(data[y][q][c].id);\n                            }\n\n                        }\n\n                    }\n\n                }\n            }\n\n            if (foundPrereqs.length === prereqs.length) {\n                return true;\n            }\n\n        }\n\n        return false;\n\n    },\n\n    getCourse: name => {\n        for (let course of courses.courses) {\n            if (course.id === name) {\n                return course;\n            }\n        }\n        return null;\n    },\n\n    getCourseColor: id => {\n        let subj = id.split(' ')[0];\n        return courses.majors[subj].color;\n    },\n\n    loadData: (key, val, data) => {\n\n        try {\n\n            let year = parseInt(key.substring(1).split('q')[0]);\n            let quarter = parseInt(key.split('q')[1]);\n            let classes = val.split(',');\n            let classData = [];\n\n            let failed = false;\n            classes.forEach(name => {\n                \n                let course = decodeCourse(name);\n                let c = Utility.getCourse(course);\n                if (c == null) {\n                    failed = true;\n                    return;\n                }\n\n                classData.push(c);\n\n            });\n\n            classData.sort((a, b) => {\n                return a.id.localeCompare(b.id);\n            });\n\n            if (failed) return null;\n\n            while (data.length < year + 1) {\n                data.push([[], [], []]);\n            }\n\n            while (data[year].length < quarter + 1) {\n                data[year].push([]);\n            }\n\n            data[year][quarter] = classData;\n\n            return data;\n\n        } catch (e) {\n            console.error(e);\n            return null;\n\n        }\n\n    },\n\n    saveData: data => {\n\n        let params = new URLSearchParams();\n\n        for (let i = 0; i < data.length; i++) {\n            for (let j = 0; j < data[i].length; j++) {\n                let classes = data[i][j].map(course => encodeCourse(course.id)).join(',');\n                if (classes.length > 0) params.set(`y${i}q${j}`, classes);\n            }\n        }\n\n        window.history.replaceState({}, '', `${window.location.pathname}?${params.toString()}`);\n\n    },\n\n    convertYear: num => {\n        switch(num) {\n            case 0:\n                return 'FIRST';\n            case 1:\n                return 'SECOND';\n            case 2:\n                return 'THIRD';\n            case 3:\n                return 'FOURTH';\n            case 4:\n                return 'FIFTH';\n            case 5:\n                return 'SIXTH';\n            case 6:\n                return 'SEVENTH';\n            case 7:\n                return 'EIGHTH';\n            case 8:\n                return 'NINTH';\n            case 9:\n                return 'TENTH';\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    convertQuarter: num => {\n        switch (num) {\n            case 0:\n                return {title: 'FALL', color: 'orange'};\n            case 1:\n                return {title: 'WINTER', color: 'sky'};\n            case 2:\n                return {title: 'SPRING', color: 'lime'};\n            case 3:\n                return {title: 'SUMMER', color: 'yellow'};\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    prereqColor: num => {\n        switch (num) {\n            case 0:\n                return 'red';\n            case 1:\n                return 'blue';\n            case 2:\n                return 'green';\n            case 3:\n                return 'yellow';\n            case 4:\n                return 'purple';\n            default:\n                return 'gray';\n        }\n    }\n\n}\n\nexport default Utility;\n\n/*\nold encoding system but the URLs are too long\nwill probably delete this from this file later\n\nfunction encodeCourse(courseName) {\n\n    let encoded = '';\n\n    for (let i = 0; i < courseName.length; i++) {\n\n        let char = courseName[i];\n\n        let encodedChar = char.charCodeAt(0).toString(16);\n\n        if (encodedChar.length === 1) {\n            encodedChar = '0' + encodedChar;\n        }\n\n        encoded += encodedChar;\n\n    }\n\n    return encoded;\n\n}\n\nfunction decodeCourse(encodedCourse) {\n\n    let decoded = '';\n\n    for (let i = 0; i < encodedCourse.length; i += 2) {\n\n        if (i + 2 > encodedCourse.length) {\n            break;\n        }\n\n        let encodedChar = encodedCourse[i] + encodedCourse[i + 1];\n\n        let char = String.fromCharCode(parseInt(encodedChar, 16));\n\n        decoded += char;\n\n    }\n\n    return decoded;\n\n}\n*/","import React from \"react\";\nimport { DragSource } from 'react-dnd';\nimport Utility from \"./Utility.js\";\nimport { InformationCircleIcon, TrashIcon, DocumentIcon } from '@heroicons/react/outline';\n\nconst classSource = {\n\n    beginDrag(props, monitor, component) {\n        const item = { course: props.course }\n        return item;\n    },\n\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n            return;\n        }\n\n        const dropResult = monitor.getDropResult();\n\n        if (dropResult.moved) {\n            props.delCourse();\n        }\n    }\n  \n  }\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Class extends React.Component {\n    render() {\n\n        let course = this.props.course;\n        let color = Utility.getCourseColor(course.id);\n\n        const { isDragging, connectDragSource } = this.props;\n\n        return connectDragSource(\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${color}-100\n            border-2 border-${color}-300 border-opacity-60 overflow-hidden whitespace-nowrap\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 group ${isDragging ? 'cursor-grab' : 'cursor-default'}`}>\n                <p className=\"text-md font-bold\">\n                    {course.id}\n                </p>\n                <p className=\"text-xs overflow-hidden w-full block whitespace-nowrap overflow-ellipsis\" title={course.name}>\n                    {course.name}\n                </p>\n                <div className=\"absolute top-3 bottom-3 right-1 px-2 flex flex-row gap-2\">\n                    <button className=\"text-gray-800 text-xs opacity-20 hover:text-blue-500 hover:opacity-100\n                    transition-all duration-150 hidden group-hover:block\" onClick={() => {\n                        this.props.alert({\n                            title: course.id,\n                            subtitle: course.name,\n                            message: course.description,\n                            confirmButton: 'Close',\n                            confirmButtonColor: color,\n                            iconBackgroundColor: color,\n                            icon: (<DocumentIcon className={`h-6 w-6 text-${color}-600`} aria-hidden=\"true\" />)\n                        })\n                    }}>\n                        <InformationCircleIcon className=\"w-6 h-6\"/>\n                        \n                    </button>\n                    <button className=\"text-gray-800 text-xs opacity-20 hover:text-red-500 hover:opacity-100\n                    transition-all duration-150 hidden group-hover:block\" onClick={() => {\n                        this.props.delCourse();\n                    }}>\n                        <TrashIcon className=\"w-6 h-6\"/>\n                        \n                    </button>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default DragSource('Class', classSource, collect)(Class);","import React from 'react';\nimport Class from './Class.js';\nimport { DropTarget } from 'react-dnd';\n\nconst quarterTarget = {\n\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) {\n            return;\n        }\n        const item = monitor.getItem();\n        props.addCourse(item.course);\n        return { moved: true };\n    }\n\n}\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true }),\n        canDrop: monitor.canDrop(),\n        itemType: monitor.getItemType()\n    }\n}\n\nclass Quarter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hovered: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!prevProps.isOver && this.props.isOver) {\n            this.setState({ hovered: true });\n        }\n      \n        if (prevProps.isOver && !this.props.isOver) {\n            this.setState({ hovered: false });\n        }\n    }\n\n    render() {\n\n        let content = this.props.content;\n        let classes = [];\n        if (content) {\n            if (content.length > 0) {\n                classes = content.map((classData, index) => {\n                    return <Class course={classData} key={index}\n                    alert={this.props.alert}\n                    delCourse={() => {\n                        this.props.delCourse(index);\n                    }}/>\n                })\n            } else {\n                classes = (\n                    <div className={`p-2 rounded-lg bg-white border-2 border-dashed border-black\n                    overflow-hidden whitespace-nowrap opacity-40`}>\n                        <p className=\"text-md font-bold\">\n                            No classes to show.\n                        </p>\n                        <p className=\"text-xs\">\n                            Use the search bar.\n                        </p>\n                    </div>\n                )\n            }\n\n        }\n\n        const { connectDropTarget } = this.props;\n\n        return connectDropTarget(\n            <div className={`block rounded-lg px-8 pt-4 pb-8 border-2\n                ${this.state.hovered ? `border-dashed border-emerald-500 bg-emerald-300 bg-opacity-50` : `border-solid bg-${this.props.color}-50 border-${this.props.color}-400`}\n                space-y-3 h-full shadow-lg`}>\n                <p className=\"text-center font-bold text-md m-0 p-0 text-gray-600\">\n                    {this.props.title}\n                </p>\n                {classes}\n            </div>\n        );\n    }\n\n}\n\nexport default DropTarget('Class', quarterTarget, collect)(Quarter);","import React from 'react';\nimport Quarter from './Quarter.js';\nimport Utility from './Utility.js';\nimport { PlusIcon } from '@heroicons/react/outline';\n\nclass Year extends React.Component {\n\n    render() {\n\n        let content = this.props.content;\n\n        let quarters = [];\n        if (content) {\n            quarters = content.map((quarter, index) => {\n                let {title, color} = Utility.convertQuarter(index);\n                return <Quarter title={title} color={color} content={quarter} key={index} yi={this.props.yi} qi={index}\n                alert={this.props.alert}\n                addCourse={course => {\n                    this.props.addCourse(course, index);\n                }}\n                delCourse={courseIndex => {\n                    this.props.delCourse(courseIndex, index);\n                }}/>\n            })\n        }\n\n        return (\n\n            <div className=\"relative p-4 border-4 border-gray-200 rounded-lg m-5 shadow-sm bg-white\">\n                <p className=\"text-center text-2xl text-gray-300 font-bold pb-2\">\n                    {this.props.title}\n                </p>\n                <div className={`grid grid-cols-1 ${quarters.length === 4 ? 'lg:grid-cols-4' : 'lg:grid-cols-3'} gap-12`}>\n                    {quarters}\n                </div>\n                {quarters.length < 4 &&\n                    <button className=\"absolute right-1 top-1 p-1 px-2 bg-white text-gray-300 hover:text-blue-400 focus:text-blue-500\"\n                            title=\"Add summer quarter\"\n                            onClick={() => {\n                                this.props.addSummerQuarter(this.props.yi);\n                            }}>\n                        <PlusIcon className=\"w-6 h-6\"/>\n                    </button>\n                }\n            </div>\n\n        );\n    }\n\n}\nexport default Year;","import React from 'react';\nimport Year from './Year.js';\nimport Utility from './Utility.js';\n\nclass Content extends React.Component { \n\n    render() {\n        let content = this.props.content;\n        let years = [];\n        if (content) {\n            years = content.map((year, index) => {\n                return <Year title={Utility.convertYear(index) + ' YEAR'} content={year} yi={index} key={index}\n                alert={this.props.alert}\n                addCourse={(course, quarter) => {\n                    this.props.addCourse(course, index, quarter);\n                }}\n                delCourse={(courseIndex, quarter) => {\n                    this.props.delCourse(courseIndex, index, quarter);\n                }}\n                addSummerQuarter={this.props.addSummerQuarter}\n                />;\n            })\n        }\n        return (\n            <div>\n                {years}\n            </div>\n        );\n    }\n}\n\nexport default Content;","import React from 'react';\nimport Utility from './Utility';\nimport { DropTarget } from 'react-dnd';\nimport { PencilIcon, XIcon } from '@heroicons/react/outline';\n\nconst contributionCourseTarget = {\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) {\n            return;\n        }\n        const item = monitor.getItem();\n        props.dragCourse(item.course, props.index);\n        return { moved: false };\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true }),\n        canDrop: monitor.canDrop(),\n        itemType: monitor.getItemType()\n    }\n}\n\nfunction ContributionCourseOffered() {\n    return (\n        <div className=\"block\">\n            <p>This class is offered...</p>\n            <div className=\"inline-block\">\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-fall\" name=\"offered-fall\" value=\"Test\"/>\n                    Fall quarter\n                </label>\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-winter\" name=\"offered-winter\" value=\"Test\"/>\n                    Winter quarter\n                </label>\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-spring\" name=\"offered-spring\" value=\"Test\"/>\n                    Spring quarter\n                </label>\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-summer\" name=\"offered-summer\" value=\"Test\"/>\n                    Summer quarter\n                </label>\n            </div>\n        </div>\n    )\n}\n\nfunction ContributionCoursePrereqs(props) {\n\n    let inputs = [];\n    for (let i = 0; i < 4; i++) {\n        inputs.push(\n            <input className=\"m-1 p-1 text-xs inline-block bg-white bg-opacity-50 border-2 border-gray-300 rounded-lg hover:border-gray-400\n                focus:border-red-400 focus:outline-none\"\n                type=\"text\"\n                key={`cc-prereq-${i}`}/>\n        )\n    }\n\n    return (\n        <div className=\"block\">\n            <p>\n                This class's prerequisites <span className=\"font-bold\">paths</span> are...\n                <span className=\"pl-4\">\n                    <button className=\"text-xs text-gray-400 hover:text-red-500\"\n                        onClick={() => {\n                            props.alert({\n                                title: 'Contribution Guide',\n                                subtitle: 'Prerequisite paths',\n                                message: 'A prerequisite path is a list of courses, ALL of which must be taken to take this class. At least one fulfilled prereq path counts as having the necessary prereqs to take the class. For example, CS 214 strictly requires that CS 111 must be taken, but allows you to pick between CS 211 and CS 150 as the other prerequisite. So, the two prereq paths would be \"COMP_SCI 111-0, COMP_SCI 211-0\" and \"COMP_SCI 111-0, COMP_SCI 150-0\".',\n                                confirmButton: 'Okay',\n                                confirmButtonColor: 'rose',\n                                iconBackgroundColor: 'rose',\n                                icon: <PencilIcon className=\"h-6 w-6 text-rose-600\" aria-hidden=\"true\" />\n                            })\n                        }}>\n                        what are prereq paths?\n                    </button>\n                </span>\n            </p>\n            <p className=\"text-xs italic\">\n                (separate each course in each path with a comma)\n            </p>\n            {inputs}\n\n        </div>\n    )\n}\n\nclass ContributionCourse extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hovered: false,\n            course: null\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!prevProps.isOver && this.props.isOver) {\n            this.setState({ hovered: true });\n        }\n      \n        if (prevProps.isOver && !this.props.isOver) {\n            this.setState({ hovered: false });\n        }\n    }\n\n    render() {\n\n        const { connectDropTarget } = this.props;\n        return connectDropTarget(\n            <div className={`relative grid gap-4 grid-cols-4 p-8 m-4 border-2 rounded-lg shadow-lg\n                ${this.state.hovered ? `border-dashed border-emerald-500 bg-emerald-300 bg-opacity-50` : `border-solid bg-white ${this.props.course ? `border-${Utility.getCourseColor(this.props.course.id)}-200` : `border-gray-400`}`}`}>\n                \n                {this.props.multiple &&\n                    <button className=\"absolute right-1 top-1 p-1 px-2 bg-white text-gray-300 hover:text-red-400 focus:text-red-500\"\n                            title=\"Remove\"\n                            onClick={() => {\n                                this.props.removeCourse(this.props.index);\n                            }}>\n                        <XIcon className=\"w-6 h-6\"/>\n                    </button>\n                        \n                    }\n\n                <div className=\"\">\n                    <p className=\"text-lg font-bold text-black\">\n                        {this.props.course ? this.props.course.id : 'SELECT A COURSE'}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                        {this.props.course ? this.props.course.name : 'Drag a course here.'}\n                    </p>\n                </div>\n\n                <div className=\"col-span-3 text-gray-700 text-sm space-y-4\">\n\n                    {this.props.course &&\n                        <ContributionCourseOffered/>}\n\n                    {this.props.course &&\n                        <ContributionCoursePrereqs alert={this.props.alert}/>}\n\n                </div>\n\n                \n\n            </div>\n        )\n\n    }\n\n}\n\nexport default DropTarget('Class', contributionCourseTarget, collect)(ContributionCourse);","import React from 'react';\nimport ContributionCourse from './ContributionCourse.js';\n\nclass Contribution extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courses: [],\n            shown: 1\n        }\n    }\n\n    dragCourse(course, index) {\n        let courses = this.state.courses;\n        courses[index] = course;\n        this.setState({courses: courses});\n    }\n\n    removeCourse(index, isEmpty) {\n        if (!isEmpty) {\n            let courses = this.state.courses;\n            courses.splice(index, 1);\n            this.setState({courses: courses});\n        }\n        this.setState({shown: this.state.shown - 1});\n    }\n\n    render() {\n\n        let cc = [];\n        let s = 0;\n\n        let multiple = this.state.shown > 1;\n\n        for (let i = 0; i < this.state.courses.length; i++) {\n            cc.push(\n                <ContributionCourse\n                    course={this.state.courses[i]}\n                    alert={this.props.alert}\n                    index={i}\n                    multiple={multiple}\n                    dragCourse={(course, index) => this.dragCourse(course, index)}\n                    removeCourse={index => this.removeCourse(index, false)}\n                    key={`cc-${i}`}/>\n            )\n            s++;\n        }\n\n        for (; s < this.state.shown; s++) {\n            cc.push(\n                <ContributionCourse\n                    alert={this.props.alert}\n                    index={s}\n                    multiple={multiple}\n                    dragCourse={(course, index) => this.dragCourse(course, index)}\n                    removeCourse={index => this.removeCourse(index, true)}\n                    key={`cc-${s}`}/>\n            )\n        }\n\n        return (\n            <div className=\"relative p-4 border-4 border-red-400 rounded-lg m-5 shadow-sm bg-white\">\n                <p className=\"text-center text-2xl text-red-400 font-bold pb-2\">\n                    CONTRIBUTION\n                </p>\n\n                <p className=\"text-center text-sm text-gray-600 py-2 lg:px-24\">\n                    There's a lot of data that would be useful to have here. While a lot of the main course data was grabbed in bulk from the Northwestern course catalog site,\n                    there's still a lot missing, like which courses are offered during what quarters, prerequisites for every course, which courses fulfill specific major requirements,\n                    and more. A lot of that is department/major specific, and is spread out over several websites that may only have data for the current year, or might not even have\n                    been updated in the last few years. The current course data file is around 22000 lines, and updating that manually doesn't sound fun.\n                </p>\n\n                <p className=\"text-center text-sm text-gray-800 py-2 lg:px-40\">\n                    Instead, you can share what you know about Northwestern courses to improve the data!\n                </p>\n\n                <div className=\"block sm:hidden\">\n                    <p className=\"text-center text-md text-red-400 py-2\">\n                        Sadly, the contribution feature is not available on mobile devices.\n                        Revisit on a larger computer to get started contributing data!\n                    </p>\n                </div>\n\n                <div className=\"hidden sm:block\">\n                    {cc}\n\n                    <button className=\"block mt-2 mb-4 mx-auto py-1 px-2 bg-white border-2 border-orange-200 rounded-lg text-xs text-orange-200\n                            hover:border-orange-400 hover:text-orange-400 transition-all duration-150\"\n                            onClick={() => {\n                                this.setState({shown: this.state.shown + 1});\n                            }}>\n                        ADD MORE DATA\n                    </button>\n\n                    <button className=\"block mt-4 mb-2 mx-auto py-2 px-20 bg-white border-2 border-red-200 rounded-lg text-md font-medium text-red-200\n                        transition-all duration-150 cursor-not-allowed\">\n                        SUBMIT\n                    </button>\n\n                    <p className=\"text-center text-xs text-gray-500 font-bold\">\n                        You can't submit yet since I haven't finished making this lol\n                    </p>\n\n                </div>\n\n            </div>\n        )\n\n    }\n\n}\n\nexport default Contribution;","import React from 'react';\nimport Utility from './Utility.js';\nimport { DragSource } from 'react-dnd'\n\nconst classSource = {\n\n    beginDrag(props, monitor, component) {\n        const item = { course: props.course }\n        return item;\n    }\n\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass SearchClass extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let prereqs = this.props.course.prereqs;\n\n        let prereq = [];\n\n        if (prereqs) {\n            for (let i = 0; i < prereqs.length; i++) {\n                let color = Utility.prereqColor(i);\n                for (let j = 0; j < prereqs[i].length; j++) {\n                    prereq.push(\n                        <div className={`bg-${color}-50 m-1 p-1 rounded-xl border border-${color}-500`} key={i + ' ' + j}>\n                            <p className={`m-0 p-0 text-xs font-light text-${color}-500`}>\n                                {prereqs[i][j]}\n                            </p>\n                        </div>\n                    )\n                }\n            }\n        }\n\n        let distros = [];\n        let distroStrings = Utility.convertDistros(this.props.course.distros);\n\n        for (let i = 0; i < distroStrings.length; i++) {\n            distros.push(\n                <p className=\"m-0 p-0 text-xs text-gray-500 font-light\" key={`distro-${i}`}>\n                    {distroStrings[i].toUpperCase()}\n                </p>\n            )\n        }\n\n        this.state = {\n            prereq: prereq,\n            distros: distros\n        }\n\n    }\n\n    render() {\n        const { isDragging, connectDragSource } = this.props;\n        return connectDragSource(\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${this.props.color}-100\n            rounded-lg border-2 border-${this.props.color}-300 border-opacity-60\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 m-4 cursor-pointer ${isDragging ? 'cursor-grab ' : 'cursor-pointer'}`}\n            onClick={() => {\n                if (this.props.select) this.props.select(this.props.course);\n            }}>\n                <p className=\"text-lg font-bold\">\n                    {this.props.course.id}\n                </p>\n                <p className=\"text-sm\">\n                    {this.props.course.name}\n                </p>\n                <p className=\"text-xs mt-4 text-gray-700\">\n                    {this.props.course.description}\n                </p>\n                {this.state.distros.length > 0 &&\n                    <div className=\"mt-4\">\n                        <p className=\"text-xs text-gray-500 font-bold\">\n                            DISTRIBUTION AREAS\n                        </p>\n                        {this.state.distros}\n                    </div>\n                }\n                {this.state.prereq.length > 0 &&\n                    <div className=\"flex flex-row flex-wrap mt-4\">\n                        {this.state.prereq}\n                    </div>\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default DragSource('Class', classSource, collect)(SearchClass);","import Utility from './Utility.js';\n\nfunction AddButton(props) {\n    return (\n        <button className={`text-center bg-white border-2 border-${props.color}-300 text-${props.color}-300 p-2 block\n        mx-auto w-2/3 rounded-md hover:border-${props.color}-500 hover:text-${props.color}-500 transition-all duration-150 my-2`} onClick={() => {\n            props.action();\n        }}>\n            {props.text}\n        </button>\n    )\n}\n\nfunction AddButtonSection(props) {\n\n    let withSummer = (\n        <div className=\"grid grid-cols-4 gap-0\">\n            <AddButton text=\"F\" color=\"orange\" action={() => {props.action(0);}}/>\n            <AddButton text=\"W\" color=\"red\" action={() => {props.action(1);}}/>\n            <AddButton text=\"Sp\" color=\"emerald\" action={() => {props.action(2);}}/>\n            <AddButton text=\"Su\" color=\"blue\" action={() => {props.action(3);}}/>\n        </div>\n    )\n\n    let withoutSummer = (\n        <div className=\"grid grid-cols-3 gap-0\">\n            <AddButton text=\"Fall\" color=\"orange\" action={() => {props.action(0);}}/>\n            <AddButton text=\"Winter\" color=\"red\" action={() => {props.action(1);}}/>\n            <AddButton text=\"Spring\" color=\"emerald\" action={() => {props.action(2);}}/>\n        </div>\n    )\n\n    return (\n        <div className=\"py-2\">\n            <p className=\"text-center text-gray-500 font-bold p-2 text-sm\">\n                {props.title}\n            </p>\n            {props.size === 4 ? withSummer : withoutSummer}\n        </div>\n    )\n}\n\n\n\nexport default function AddButtons(props) {\n\n    let data = props.data;\n    \n    let years = data.length;\n    \n    let sections = [];\n    for (let y = 0; y < years; y++) {\n        sections.push(<AddButtonSection title={`${Utility.convertYear(y)} YEAR`} size={data[y].length} action={quarter => {props.action(y, quarter);}} key={y}/>);\n    }\n    \n\n    return (\n        <div className=\"\">\n            {sections}\n        </div>\n    )\n\n}","import React from 'react';\nimport courses from './data/courses.json';\nimport SearchClass from './SearchClass.js';\nimport AddButtons from './AddButtons.js';\nimport Utility from './Utility.js';\nimport { SearchIcon, BookOpenIcon, ArrowRightIcon, SaveIcon, DotsHorizontalIcon } from '@heroicons/react/outline';\n\nconst SEARCH_RESULT_LIMIT = 100;\n\nfunction MiniContentBlock(props) {\n\n    return (\n        <div className=\"text-center p-4\">\n            <div className=\"mx-auto my-1 flex items-center justify-center text-gray-500\">\n                {props.icon}\n            </div>\n            <p className=\"text-lg font-medium text-gray-500\">\n                {props.title}\n            </p>\n            <p className=\"text-sm font-light text-gray-400\">\n                {props.text}\n            </p>\n        </div>\n    )\n\n}\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n            current: null\n        }\n\n    }\n\n    searchMessage(title, subtitle) {\n        return (\n            <div className=\"text-center text-gray-600 px-4\">\n                <p className=\"text-lg font-medium\">\n                    {title}\n                </p>\n                <p className=\"text-sm font-light\">\n                    {subtitle}\n                </p>\n            </div>\n        )\n    }\n\n    getResults() {\n\n        let search = this.state.search.toLowerCase();\n        if (search.length === 0) {\n            return (\n                <div>\n                    <MiniContentBlock\n                        icon={<SearchIcon className=\"w-6 h-6\"/>}\n                        title=\"Search\"\n                        text=\"Use the search bar to search across every undergraduate course at Northwestern.\"\n                    />\n                    <MiniContentBlock\n                        icon={<BookOpenIcon className=\"w-6 h-6\"/>}\n                        title=\"Learn\"\n                        text=\"Get information like the course description, prerequisites, and more, all from right here. We'll help you make sure prereqs are met when you're adding courses, too.\"\n                    />\n                    <MiniContentBlock\n                        icon={<ArrowRightIcon className=\"w-6 h-6\"/>}\n                        title=\"Drag\"\n                        text=\"Drag courses from this search area into the quarter you want. Alternatively, you can click on the course and select the quarter you want to add it to.\"\n                    />\n                    <MiniContentBlock\n                        icon={<SaveIcon className=\"w-6 h-6\"/>}\n                        title=\"Save and share\"\n                        text=\"The URL updates as you modify your plan. Save it somewhere or share it with others.\"\n                    />\n                </div>\n            )\n        }\n        if (search.length < 3) {\n            return this.searchMessage('Keep typing...', `You'll need at least 3 characters.`);\n        }\n\n        let filtered = courses.courses.filter(course => {\n            if (course.id.toLowerCase().includes(search)) return true;\n            if (course.name.toLowerCase().includes(search)) return true;\n            if (course.id.toLowerCase().replace('_', ' ').includes(search)) return true;\n            return false;\n        });\n\n        let courseList = [];\n        let count = 0;\n        for (let course of filtered) {\n            courseList.push(\n                <SearchClass color={Utility.getCourseColor(course.id)} course={course} key={course.id} select={classData => {\n                    this.setState({current: classData});\n                }}/>\n            )\n            count++;\n            if (count >= SEARCH_RESULT_LIMIT) {\n                courseList.push(\n                    <MiniContentBlock\n                        icon={<DotsHorizontalIcon className=\"w-6 h-6\"/>}\n                        title={`and ${filtered.length - count} more.`}\n                        text=\"There are too many results to display. You'll need to narrow your search to get more.\"\n                        key=\"too-many\"/>\n                )\n                break;\n            }\n        }\n        if (courseList.length === 0) {\n            return this.searchMessage('Aw, no results.', `Try refining your search.`);\n        }\n\n        return courseList;\n\n    }\n\n    render() {\n\n        let singleClassView = false;\n\n        let searchField = (\n            <div className=\"sticky top-0 p-2 mb-2 bg-white z-10 rounded-lg\">\n                <input className=\"block m-4 mx-auto w-11/12 border-2 border-gray-300 shadow-md\n                rounded-lg hover:border-gray-500 outline-none focus:border-black text-lg p-2 px-4\n                bg-white\" value={this.state.search} placeholder=\"Search for classes...\" onChange={event => {\n                    this.setState({search: event.target.value})\n                }}/>\n            </div>\n        )\n        \n        let selectedClass = null;\n        let addButtons = null;\n        let exitButton = null;\n\n        if (this.state.current) {\n            singleClassView = true;\n\n            selectedClass = (\n                <SearchClass color={Utility.getCourseColor(this.state.current.id)} course={this.state.current}/>\n            )\n\n            addButtons = (\n                    <AddButtons action={(year, quarter) => {\n                        this.props.addCourse(this.state.current, year, quarter);\n                        this.setState({current: null});\n                    }} data={this.props.data}/>\n            )\n            exitButton = (\n                <button className=\"block mx-auto bg-white border-2 border-gray-400 text-gray-400\n                w-2/3 p-2 my-4 hover:border-black hover:text-black transition-all duration-150 rounded-md\" onClick={() => {\n                    this.setState({current: null});\n                }}>\n                    Back\n                </button>\n            );\n        }\n\n\n        return (\n            <div className=\"border-4 border-black my-4 rounded-xl shadow-lg h-full\n            overflow-scroll overscroll-contain\">\n                {!singleClassView && searchField}\n                {!singleClassView && this.getResults()}\n\n                {singleClassView && selectedClass}\n                {singleClassView && addButtons}\n                {singleClassView && exitButton}\n\n            </div>\n        )\n    }\n\n}\n\nexport default Search;","import React from 'react';\n\nclass Info extends React.Component {\n\n    render() {\n        return (\n            <div className=\"my-4 px-4 py-2 text-black text-center whitespace-nowrap bg-purple-50 border-2 border-purple-800 rounded-3xl\">\n                <p className=\"text-2xl font-normal text-purple-800\">\n                    Plan Northwestern\n                </p>\n                <p className=\"text-sm font-light\">\n                    {this.props.version}\n                </p>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Info;","import React from 'react';\nimport { SaveIcon, PlusIcon, InformationCircleIcon, ExclamationIcon, CogIcon } from '@heroicons/react/outline';\n\nfunction TaskBarButton(props) {\n    return (\n        <button className={`border-2 rounded-md border-gray-400 bg-gray-50 text-gray-600\n                hover:border-${props.color}-500 hover:bg-${props.color}-50 hover:text-${props.color}-500\n                transition-all duration-150 ${props.span ? `col-span-${props.span}` : ''}\n                ${props.active ? `border-${props.color}-400 bg-${props.color}-50 text-${props.color}-400` : `border-solid`}`}\n                onClick={() => {\n                    props.action();\n                }}>\n            {props.name}\n        </button>\n    )\n}\n\nclass TaskBar extends React.Component {\n\n    render() {\n        return (\n\n            <div className=\"grid grid-cols-3 px-4 gap-4 text-xs\">\n\n                <TaskBarButton name=\"About\" color=\"purple\" action={() => {\n\n                    this.props.alert({\n                        title: 'Plan Northwestern',\n                        subtitle: `version ${this.props.version} by Dilan N`,\n                        message: 'An easy and organized way to plan out your classes at Northwestern. Currently in beta with a temporary URL. Data is all saved in the URL, so save the link to your plan to access it later or share with friends. Notice any errors with classes? Check out the GitHub repository for instructions on reporting/fixing.',\n                        confirmButton: 'View on GitHub',\n                        confirmButtonColor: 'purple',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'purple',\n                        icon: (<InformationCircleIcon className=\"h-6 w-6 text-purple-600\" aria-hidden=\"true\" />),\n                        action: () => {\n                            window.open('https://github.com/dilanx/plan-northwestern', '_blank');\n                        }\n\n                    })\n\n                }}/>\n\n                <TaskBarButton name=\"Save / Share\" color=\"emerald\" action={() => {\n                    this.props.alert({\n                        title: 'Ready to share!',\n                        message: 'All of your plan data is stored in the URL. When you make changes to your plan, the URL is updated to reflect those changes. Save it somewhere, or share with a friend!',\n                        confirmButton: 'Copy to clipboard',\n                        confirmButtonColor: 'emerald',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'emerald',\n                        icon: (<SaveIcon className=\"h-6 w-6 text-emerald-600\" aria-hidden=\"true\" />),\n                        textView: window.location.href,\n                        action: () => {\n                            navigator.clipboard.writeText(window.location.href);\n                        }\n                    });\n                }}/>\n\n                <TaskBarButton name=\"Add Year\" color=\"cyan\" action={() => {\n                    if (this.props.allowAddYear) {\n                        this.props.alert({\n                            title: 'Add a year?',\n                            message: 'This will add another year to your plan. You can remove it by removing all classes from that year and refreshing the page.',\n                            confirmButton: 'Add year',\n                            confirmButtonColor: 'cyan',\n                            cancelButton: 'Close',\n                            iconBackgroundColor: 'cyan',\n                            icon: (<PlusIcon className=\"h-6 w-6 text-cyan-600\" aria-hidden=\"true\" />),\n                            action: () => {\n                                this.props.addYear();\n                            }\n                        });\n                    } else {\n                        this.props.alert({\n                            title: `Can't add another year :(`,\n                            message: `You can't add more than 10 years.`,\n                            confirmButton: 'Close',\n                            confirmButtonColor: 'cyan',\n                            iconBackgroundColor: 'cyan',\n                            icon: (<ExclamationIcon className=\"h-6 w-6 text-cyan-600\" aria-hidden=\"true\" />),\n                        });\n                    }\n                }}/>\n\n                <TaskBarButton name=\"Settings\" color=\"yellow\" action={() => {\n                    this.props.alert({\n                        title: 'Settings',\n                        message: 'Soon lol give me a sec',\n                        confirmButton: 'Close',\n                        confirmButtonColor: 'yellow',\n                        iconBackgroundColor: 'yellow',\n                        icon: (<CogIcon className=\"h-6 w-6 text-yellow-600\" aria-hidden=\"true\" />),\n                    })\n                }}/>\n\n                <TaskBarButton name=\"Contribute course data\" color=\"red\" active={this.props.switches.contribution} span=\"2\" action={() => {\n                    this.props.setSwitch('contribution', !this.props.switches.contribution);\n                }}/>\n\n                {/* <TaskBarButton name=\"Settings\" color=\"blue\" action={() => {\n                    this.props.alert({\n                        title: 'Settings',\n                        message: `Features like summer classes, more than 4 years, and more are coming soon. Oh also, I found this cool library for drag-and-drop online so I hope to make it possible to drag courses into the quarter you want.`,\n                        confirmButton: 'Close',\n                        confirmButtonColor: 'blue',\n                        iconBackgroundColor: 'blue',\n                        icon: (<CogIcon className=\"h-6 w-6 text-blue-600\" aria-hidden=\"true\" />),\n                    })\n                }}/> */}\n\n                \n\n\n            </div>\n        )\n    }\n\n}\n\nexport default TaskBar;","import { useState, useRef } from 'react'\nimport { Dialog } from '@headlessui/react'\n\nexport default function Alert(props) {\n\n    let [isOpen, setIsOpen] = useState(true)\n\n    let cancelButtonRef = useRef(null);\n\n    function close() {\n        setIsOpen(false);\n        props.onClose();\n    }\n\n    function confirm() {\n        setIsOpen(false);\n        props.onConfirm();\n    }\n\n    let data = props.data;\n\n    return (\n        <Dialog open={isOpen} onClose={() => {close()}} initialFocus={cancelButtonRef} className=\"fixed z-10 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                    &#8203;\n                </span>\n                <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\"/>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                        <div className=\"sm:flex sm:items-start\">\n                            <div className={`mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-${data.iconBackgroundColor}-100 sm:mx-0 sm:h-10 sm:w-10`}>\n                                {data.icon}\n                            </div>\n                            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                                <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                    {data.title}\n                                </Dialog.Title>\n\n                                {data.subtitle &&\n                                    <div>\n                                        <p className=\"text-md font-light text-gray-900\">\n                                            {data.subtitle}\n                                        </p>\n                                    </div>\n                                }\n                                <div className=\"mt-2\">\n                                    <p className=\"text-sm text-gray-500\">\n                                    {data.message}\n                                    </p>\n                                </div>\n                                {data.textView &&\n                                    <div>\n                                        <p className=\"bg-gray-200 mt-4 p-1 px-4 font-mono text-sm rounded-md md:w-96 overflow-scroll whitespace-nowrap overscroll-contain\">\n                                            {data.textView}\n                                        </p>\n                                    </div>\n                                }\n                            </div>\n                                \n                        </div>\n                    </div>\n\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button\n                            type=\"button\"\n                            className={`w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-${data.confirmButtonColor}-500 text-base font-medium text-white\n                            hover:bg-${data.confirmButtonColor}-600 focus:bg-${data.confirmButtonColor}-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm`}\n                            onClick={() => {confirm();}}>\n                            {data.confirmButton}\n                        </button>\n                        {data.cancelButton && <button\n                            ref={cancelButtonRef}\n                            type=\"button\"\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2\n                            bg-white text-base font-medium text-gray-700 hover:bg-gray-100 focus:bg-gray-200 focus:outline-none sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                            onClick={() => {close();}}>\n                            {data.cancelButton}\n                        </button>}\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n\n}","\nimport React from 'react';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Content from './Content.js';\nimport Contribution from './Contribution.js';\nimport Search from './Search.js';\nimport Utility from './Utility.js';\nimport Info from './Info.js';\nimport TaskBar from './TaskBar.js';\nimport Alert from './Alert.js';\n\nimport { ExclamationIcon, PlusIcon } from '@heroicons/react/outline';\n\nconst VERSION = '0.1.11 (beta)';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        let failed = false;\n        params.forEach((val, key, par) => {\n            if (key.startsWith('y')) {\n                if (failed) return;\n                let newData = Utility.loadData(key, val, data);\n                if (newData == null) {\n                    failed = true;\n                    return;\n                }\n                data = newData;\n            }\n        })\n\n        let defaultAlert = null;\n\n        if (failed) {\n            data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n            defaultAlert = {\n                title: 'Unable to load plan.',\n                message: `The plan URL you entered is not valid. Ensure that it hasn't been manualy modified.`,\n                confirmButton: 'What a shame.',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />)\n            }\n        }\n\n        this.state = {\n            data: data,\n            alert: defaultAlert,\n            switches: {}\n        }\n\n    }\n\n    setSwitch(key, val) {\n        let switches = this.state.switches;\n        switches[key] = val;\n        this.setState({switches: switches});\n    }\n\n    showAlert(alertData) {\n        this.setState({\n            alert: alertData\n        })\n    }\n\n    postShowAlert() {\n        this.setState({\n            alert: null\n        })\n    }\n\n    addCourse(course, year, quarter) {\n        let data = this.state.data;\n        let fulfilledPrereqs = Utility.checkPrereq(course, year, quarter, data);\n\n        if (!fulfilledPrereqs) {\n            this.showAlert({\n                title: 'Missing prerequisite courses.',\n                message: `You can't take this course that quarter without taking the necessary prerequisites in previous quarters. Make sure you have all prereqs of a certain color in your plan.`,\n                cancelButton: 'Go back',\n                confirmButton: 'Add anyway',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />),\n                action: () => {\n                    data[year][quarter].push(course);\n                    data[year][quarter].sort((a, b) => {\n                        return a.id.localeCompare(b.id);\n                    });\n                    this.setState({data: data});\n                    Utility.saveData(data);\n                }\n\n            })\n        } else {\n            data[year][quarter].push(course);\n            data[year][quarter].sort((a, b) => {\n                return a.id.localeCompare(b.id);\n            });\n            this.setState({data: data});\n            Utility.saveData(data);\n        }\n    }\n\n    delCourse(courseIndex, year, quarter) {\n        let data = this.state.data;\n        data[year][quarter].splice(courseIndex, 1);\n        this.setState({data: data});\n        Utility.saveData(data);\n    }\n\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <div className=\"\">\n\n                    {this.state.alert &&\n                        <Alert data={this.state.alert}\n                            onClose={() => {\n                                this.postShowAlert();\n                            }}\n                            onConfirm={() => {\n                                if (this.state.alert.action) {\n                                    this.state.alert.action();\n                                }\n                                this.postShowAlert();\n                            }\n                    }/>}\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-8\">\n                        <div className=\"col-span-2 px-4 h-128 md:h-screen flex flex-col\">\n                            <Info version={VERSION}/>\n                            <TaskBar\n                                alert={alertData => {\n                                    this.showAlert(alertData)\n                                }}\n                                allowAddYear={this.state.data.length < 10}\n                                addYear={() => {\n                                    let data = this.state.data;\n                                    data.push([[], [], []]);\n                                    this.setState({data: data})\n                                }}\n                                version={VERSION}\n                                switches={this.state.switches}\n                                setSwitch={(key, val) => {this.setSwitch(key, val)}}\n                            />\n                            <Search\n                                data={this.state.data}\n                                addCourse={(course, year, quarter) => {\n                                    this.addCourse(course, year, quarter);\n                                }}\n                            />\n                        </div>\n                        \n                        <div className=\"col-span-6 block pt-0 h-screen md:overflow-scroll\">\n                            {this.state.switches.contribution &&\n                                <Contribution\n                                alert={alertData => {\n                                    this.showAlert(alertData)\n                                }}/>\n                            }\n                            \n                            <Content content={this.state.data}\n                                alert={alertData => {\n                                    this.showAlert(alertData)\n                                }}\n                                addCourse={(course, year, quarter) => {\n                                    this.addCourse(course, year, quarter);\n                                }}\n                                delCourse={(courseIndex, year, quarter) => {\n                                    this.delCourse(courseIndex, year, quarter);\n                                }}\n                                addSummerQuarter={year => {\n\n                                    this.showAlert({\n                                        title: 'Add summer quarter to this year?',\n                                        message: `This will add a summer quarter to your ${Utility.convertYear(year).toLowerCase()} year. You can remove it by removing all classes from that quarter and refreshing the page.`,\n                                        confirmButton: 'Add quarter',\n                                        confirmButtonColor: 'blue',\n                                        cancelButton: 'Close',\n                                        iconBackgroundColor: 'blue',\n                                        icon: (<PlusIcon className=\"h-6 w-6 text-blue-600\" aria-hidden=\"true\" />),\n                                        action: () => {\n                                            let data = this.state.data;\n                                            data[year].push([]);\n                                            this.setState({data: data});\n                                        }\n                                    });\n                                    \n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </DndProvider>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}