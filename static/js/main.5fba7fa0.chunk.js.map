{"version":3,"sources":["CourseManager.js","Utility.js","components/Class.js","components/Quarter.js","components/Year.js","components/Content.js","components/menu/Info.js","components/menu/TaskBar.js","components/search/SearchClass.js","components/search/AddButtons.js","components/search/Search.js","components/menu/StatsBar.js","components/contribution/ContributionCourse.js","components/contribution/Contribution.js","components/menu/Alert.js","App.js","index.js"],"names":["CourseManager","getDistroFulfillment","data","df","y","length","q","c","course","distros","distroStr","dfl","i","d","thisDf","JSON","parse","stringify","parseInt","push","id","console","log","getDistroPositions","distroPos","more","includes","getTotalCredits","total","parseFloat","units","getQuarterCredits","quarter","duplicateCourse","year","getCourse","name","courses","getCourseColor","subj","split","majors","color","loadData","key","val","substring","classes","classData","failed","forEach","sp","num","major_ids","sort","a","b","localeCompare","e","error","saveData","params","URLSearchParams","j","map","m","join","set","window","history","replaceState","location","pathname","toString","Utility","loadSwitchesFromStorage","switches","keys","Object","localStorage","startsWith","getItem","saveSwitchToStorage","setItem","getDistroAcronym","distroString","distro","acronym","convertDistros","strings","convertYear","convertQuarter","title","prereqColor","Class","this","props","extras","prereqs","content","alert","subtitle","message","description","confirmButton","confirmButtonColor","iconBackgroundColor","icon","className","isDragging","connectDragSource","showMoreInfo","more_info","compact","onClick","openInfo","delCourse","React","Component","DragSource","beginDrag","monitor","component","from","yi","qi","connect","dragSource","Quarter","state","hovered","prevProps","isOver","setState","index","unitString","connectDropTarget","quarter_units","DropTarget","drop","didDrop","item","moveCourse","addCourse","moved","dropTarget","isOverCurrent","shallow","canDrop","itemType","getItemType","Year","quarters","courseIndex","addSummerQuarter","Content","years","Info","version","TaskBarButton","span","active","action","TaskBar","cancelButton","open","options","buttonTextOn","singleAction","textView","href","navigator","clipboard","writeText","allowAddYear","addYear","setSwitch","buttonTextOff","saveToStorage","contribution","SearchClass","distroStrings","select","AddButton","text","AddButtonSection","withSummer","withoutSummer","size","AddButtons","sections","MiniContentBlock","Search","search","current","toLowerCase","searchMessage","filtered","filter","replace","courseList","count","singleClassView","searchField","value","placeholder","onChange","event","target","selectedClass","addButtons","exitButton","getResults","StatsBar","ContributionCourseOffered","type","ContributionCourse","multiple","removeCourse","dragCourse","Contribution","shown","isEmpty","splice","cc","s","Alert","useState","isOpen","setIsOpen","cancelButtonRef","useRef","close","onClose","extraList","extra","optionList","option","enabled","initialFocus","Overlay","Title","as","onConfirm","ref","VERSION","App","par","newData","defaultAlert","defaultSwitches","save","alertData","exists","showAlert","actuallyAddCourse","unitCount","oldYear","oldQuarter","newYear","newQuarter","DndProvider","backend","HTML5Backend","postShowAlert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fba7fa0.chunk.js","sourcesContent":["import courses from './data/courses.json';\n\nlet CourseManager = {\n\n    getDistroFulfillment: data => {\n\n        let df = [[[], [], [], [], [], []]];\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n\n                    let course = data[y][q][c];\n                    if (!course.distros) continue;\n                    let distroStr = course.distros;\n\n                    let dfl = df.length;\n                    for (let i = 0; i < dfl; i++) {\n                        for (let d = 0; d < distroStr.length; d++) {\n\n                            // deep copy lol\n                            let thisDf = JSON.parse(JSON.stringify(df[i]));\n                            let di = parseInt(distroStr[d]) - 1;\n                            thisDf[di].push(course.id);\n                            df.push(thisDf);\n\n                        }\n                        \n                    }\n\n                }\n            }\n        }\n        for (let i = 0; i < df.length; i++) {\n            console.log(df[i]);\n        }\n    },\n\n    getDistroPositions: data => {\n        \n        let distroPos = [[], [], [], [], [], []];\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n\n                    let more = data[y][q][c].more;\n                    if (!more) continue;\n\n                    for (let i = 0; i < 6; i++) {\n                        if (more.includes(`w${i}`)) {\n                            distroPos[i].push(c);\n                            break;\n                        }\n                    }\n\n                }\n            }\n        }\n\n        return distroPos;\n\n    },\n\n    getTotalCredits: data => {\n\n        let total = 0;\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n                    total += parseFloat(data[y][q][c].units);\n                }\n            }\n        }\n\n        return total;\n\n    },\n\n    getQuarterCredits: quarter => {\n\n        let total = 0;\n\n        for (let c = 0; c < quarter.length; c++) {\n            total += parseFloat(quarter[c].units);\n        }\n\n        return total;\n\n    },\n\n    duplicateCourse: (course, data) => {\n\n        for (let y = 0; y < data.length; y++) {\n            for (let q = 0; q < data[y].length; q++) {\n                for (let c = 0; c < data[y][q].length; c++) {\n                    if (data[y][q][c].id === course.id) {\n                        return {\n                            year: y,\n                            quarter: q\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n\n    },\n\n    getCourse: name => {\n        for (let course of courses.courses) {\n            if (course.id === name) {\n                return course;\n            }\n        }\n        return null;\n    },\n\n    getCourseColor: id => {\n        let subj = id.split(' ')[0];\n        return courses.majors[subj].color;\n    },\n\n    loadData: (key, val, data) => {\n\n        try {\n\n            let year = parseInt(key.substring(1).split('q')[0]);\n            let quarter = parseInt(key.split('q')[1]);\n            let classes = val.split(',');\n            let classData = [];\n\n            let failed = false;\n            classes.forEach(name => {\n\n                let sp = name.split('_');\n\n                let id = sp[0];\n                let num = sp[1];\n\n                let subj = courses.major_ids[id];\n\n                let course = subj + ' ' + num;\n\n                let c = CourseManager.getCourse(course);\n                if (c == null) {\n                    failed = true;\n                    return;\n                }\n\n                if (sp.length > 2) {\n                    let more = [];\n                    for (let i = 2; i < sp.length; i++) {\n                        more.push(sp[i]);\n                    }\n                    c.more = more;\n                }\n\n                classData.push(c);\n\n            });\n\n            classData.sort((a, b) => {\n                return a.id.localeCompare(b.id);\n            });\n\n            if (failed) return null;\n\n            while (data.length < year + 1) {\n                data.push([[], [], []]);\n            }\n\n            while (data[year].length < quarter + 1) {\n                data[year].push([]);\n            }\n\n            data[year][quarter] = classData;\n\n            return data;\n\n        } catch (e) {\n            console.error(e);\n            return null;\n\n        }\n\n    },\n\n    saveData: data => {\n\n        let params = new URLSearchParams();\n\n        for (let i = 0; i < data.length; i++) {\n            for (let j = 0; j < data[i].length; j++) {\n                let classes = data[i][j].map(course => {\n\n                    let sp = course.id.split(' ');\n\n                    let subj = sp[0];\n                    let num = sp[1];\n\n                    let id = courses.majors[subj].id;\n\n                    let name = id + '_' + num;\n\n                    if (course.more) {\n                        for (let m = 0; m < course.more.length; m++) {\n                            name += '_' + course.more[m];\n                        }\n                    }\n\n\n                    return name;\n\n                }).join(',');\n\n                if (classes.length > 0) params.set(`y${i}q${j}`, classes);\n            }\n        }\n\n        window.history.replaceState({}, '', `${window.location.pathname}?${params.toString()}`);\n\n    }\n\n}\n\nexport default CourseManager;\n\n/*\nold encoding system but the URLs are too long\nwill probably delete this from this file later\n\nfunction encodeCourse(courseName) {\n\n    let encoded = '';\n\n    for (let i = 0; i < courseName.length; i++) {\n\n        let char = courseName[i];\n\n        let encodedChar = char.charCodeAt(0).toString(16);\n\n        if (encodedChar.length === 1) {\n            encodedChar = '0' + encodedChar;\n        }\n\n        encoded += encodedChar;\n\n    }\n\n    return encoded;\n\n}\n\nfunction decodeCourse(encodedCourse) {\n\n    let decoded = '';\n\n    for (let i = 0; i < encodedCourse.length; i += 2) {\n\n        if (i + 2 > encodedCourse.length) {\n            break;\n        }\n\n        let encodedChar = encodedCourse[i] + encodedCourse[i + 1];\n\n        let char = String.fromCharCode(parseInt(encodedChar, 16));\n\n        decoded += char;\n\n    }\n\n    return decoded;\n\n}\n*/","let Utility = {\n\n    loadSwitchesFromStorage: () => {\n        let switches = {};\n        let keys = Object.keys(localStorage);\n        for (let i = 0; i < keys.length; i++) {\n            if (keys[i].startsWith(\"switch_\")) {\n                let val = localStorage.getItem(keys[i]);\n                let switchId = keys[i].substring(7);\n                if (val === 'true') val = true;\n                else if (val === 'false') val = false;\n                switches[switchId] = val;\n            }\n        }\n        return switches;\n    },\n\n    saveSwitchToStorage: (key, val) => {\n        localStorage.setItem('switch_' + key, val);\n    },\n\n    getDistroAcronym: distroString => {\n        let distro = distroString.split(' ');\n        let acronym = '';\n        distro.forEach(d => acronym += d[0]);\n        return acronym;\n    },\n\n    convertDistros: distros => {\n\n        let strings = [];\n\n        if (!distros) return strings;\n\n        for (let i = 0; i < distros.length; i++) {\n\n            let d = parseInt(distros[i]);\n\n            switch (d) {\n                case 1:\n                    strings.push('Natural Sciences')\n                    break;\n                case 2:\n                    strings.push('Formal Studies')\n                    break;\n                case 3:\n                    strings.push('Social and Behavioral Sciences')\n                    break;\n                case 4:\n                    strings.push('Historical Studies')\n                    break;\n                case 5:\n                    strings.push('Ethics and Values')\n                    break;\n                case 6:\n                    strings.push('Literature and Fine Arts')\n                    break;\n                default:\n                    strings.push('Unknown')\n                    break;\n            }\n\n        }\n\n        return strings;\n\n    },\n\n    convertYear: num => {\n        switch(num) {\n            case 0:\n                return 'FIRST';\n            case 1:\n                return 'SECOND';\n            case 2:\n                return 'THIRD';\n            case 3:\n                return 'FOURTH';\n            case 4:\n                return 'FIFTH';\n            case 5:\n                return 'SIXTH';\n            case 6:\n                return 'SEVENTH';\n            case 7:\n                return 'EIGHTH';\n            case 8:\n                return 'NINTH';\n            case 9:\n                return 'TENTH';\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    convertQuarter: num => {\n        switch (num) {\n            case 0:\n                return {title: 'FALL', color: 'orange'};\n            case 1:\n                return {title: 'WINTER', color: 'sky'};\n            case 2:\n                return {title: 'SPRING', color: 'lime'};\n            case 3:\n                return {title: 'SUMMER', color: 'yellow'};\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    prereqColor: num => {\n        switch (num) {\n            case 0:\n                return 'red';\n            case 1:\n                return 'blue';\n            case 2:\n                return 'green';\n            case 3:\n                return 'yellow';\n            case 4:\n                return 'purple';\n            default:\n                return 'gray';\n        }\n    }\n\n}\n\nexport default Utility;","import React from \"react\";\nimport { DragSource } from 'react-dnd';\nimport CourseManager from '../CourseManager.js';\nimport Utility from '../Utility.js';\nimport { InformationCircleIcon, TrashIcon, DocumentIcon } from '@heroicons/react/outline';\n\nconst classSource = {\n\n    beginDrag(props, monitor, component) {\n        const item = {\n            course: props.course,\n            from: {\n                year: props.yi,\n                quarter: props.qi\n            }\n        }\n        return item;\n    }\n  \n  }\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Class extends React.Component {\n\n    openInfo() {\n        let course = this.props.course;\n        let color = CourseManager.getCourseColor(course.id);\n\n        let extras = [];\n\n        if (course.prereqs) {\n            extras.push(\n                {\n                    title: 'PREREQUISITES',\n                    content: course.prereqs\n                }\n            )\n        }\n\n        if (course.distros) {\n            let distros = Utility.convertDistros(course.distros);\n            extras.push(\n                {\n                    title: 'DISTRIBUTION AREAS',\n                    content: distros.join(', ')\n                }\n            )\n        }\n\n        this.props.alert({\n            title: course.id,\n            subtitle: course.name,\n            message: course.description,\n            confirmButton: 'Close',\n            confirmButtonColor: color,\n            iconBackgroundColor: color,\n            icon: (<DocumentIcon className={`h-6 w-6 text-${color}-600`} aria-hidden=\"true\" />),\n            extras: extras\n        })\n    }\n\n    render() {\n\n        let course = this.props.course;\n        let color = CourseManager.getCourseColor(course.id);\n\n        const { isDragging, connectDragSource } = this.props;\n\n        let showMoreInfo = this.props.switches.more_info && !this.props.switches.compact;\n\n        return connectDragSource(\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${color}-100\n            border-2 border-${color}-300 border-opacity-60 overflow-hidden whitespace-nowrap\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 group ${isDragging ? 'cursor-grab' : 'cursor-default'}\n            compact:px-2 compact:py-0.5`}>\n                <p className=\"text-md font-bold compact:text-sm\">\n                    {course.id}\n                </p>\n                <p className=\"text-xs overflow-hidden w-full block whitespace-nowrap overflow-ellipsis compact:hidden\" title={course.name}>\n                    {course.name}\n                </p>\n                {showMoreInfo &&\n                    <div>\n                        {course.prereqs &&\n                            <div className=\"mt-4\">\n                                <p className=\"text-xs text-gray-500 font-bold\">\n                                    PREREQUISITES\n                                </p>\n                                <p className=\"m-0 p-0 text-xs text-gray-500 font-light whitespace-normal\">\n                                    {course.prereqs}\n                                </p>\n                            </div>\n                        }\n                        {course.distros &&\n                            <div className=\"mt-4\">\n                                <p className=\"text-xs text-gray-500 font-bold\">\n                                    DISTRIBUTION AREAS\n                                </p>\n                                <p className=\"m-0 p-0 text-xs text-gray-500 font-light whitespace-normal\">\n                                    {Utility.convertDistros(course.distros).join(', ')}\n                                </p>\n                            </div>\n                        }\n                    </div>\n                }\n                <div className=\"absolute top-3 bottom-3 compact:top-0.5 compact:bottom-0.5 right-1 px-2 flex flex-row gap-2\">\n                    <button className=\"text-gray-800 text-xs opacity-20 hover:text-blue-500 hover:opacity-100\n                    transition-all duration-150 hidden group-hover:block\" onClick={() => {\n                        this.openInfo();\n                    }}>\n                        <InformationCircleIcon className=\"w-6 h-6 compact:w-5 compact:h-5\"/>\n                        \n                    </button>\n                    <button className=\"text-gray-800 text-xs opacity-20 hover:text-red-500 hover:opacity-100\n                    transition-all duration-150 hidden group-hover:block\" onClick={() => {\n                        this.props.delCourse();\n                    }}>\n                        <TrashIcon className=\"w-6 h-6 compact:w-5 compact:h-5\"/>\n                        \n                    </button>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default DragSource('Class', classSource, collect)(Class);","import React from 'react';\nimport Class from './Class.js';\nimport CourseManager from '../CourseManager.js';\nimport { DropTarget } from 'react-dnd';\n\nconst quarterTarget = {\n\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) {\n            return;\n        }\n        const item = monitor.getItem();\n        if (item.from) {\n            props.moveCourse(item.course, item.from.year, item.from.quarter, props.yi, props.qi);\n        } else {\n            props.addCourse(item.course);\n        }\n        return { moved: true };\n    }\n\n}\n  \nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true }),\n        canDrop: monitor.canDrop(),\n        itemType: monitor.getItemType()\n    }\n}\n\nclass Quarter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hovered: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!prevProps.isOver && this.props.isOver) {\n            this.setState({ hovered: true });\n        }\n      \n        if (prevProps.isOver && !this.props.isOver) {\n            this.setState({ hovered: false });\n        }\n    }\n\n    render() {\n\n        let content = this.props.content;\n        let classes = [];\n        if (content) {\n            if (content.length > 0) {\n                classes = content.map((classData, index) => {\n                    return <Class course={classData} key={index} yi={this.props.yi} qi={this.props.qi}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    delCourse={() => {\n                        this.props.delCourse(index);\n                    }}/>\n                })\n            } else {\n                classes = (\n                    <div className={`p-2 compact:px-2 compact:py-0.5 rounded-lg bg-white border-2 border-dashed border-black\n                    overflow-hidden whitespace-nowrap opacity-40`}>\n                        <p className=\"text-md font-bold\">\n                            No classes to show.\n                        </p>\n                        <p className=\"compact:hidden text-xs\">\n                            Use the search bar.\n                        </p>\n                    </div>\n                )\n            }\n\n        }\n\n        let units = CourseManager.getQuarterCredits(content);\n\n        let unitString = 'units';\n        if (units === 1) {\n            unitString = 'unit';\n        }\n\n        const { connectDropTarget } = this.props;\n\n        return connectDropTarget(\n            <div className={`relative block rounded-lg px-8 pt-4 pb-8 border-2\n                ${this.state.hovered ? `border-dashed border-emerald-500 bg-emerald-300 bg-opacity-50` : `border-solid bg-${this.props.color}-50 border-${this.props.color}-400`}\n                space-y-3 h-full shadow-lg compact:py-2 compact:shadow-sm`}>\n                <p className=\"text-center font-bold text-md m-0 p-0 text-gray-600 compact:text-sm\">\n                    {this.props.title}\n                </p>\n                {classes}\n                {this.props.switches.quarter_units &&\n                    <p className=\"absolute right-2 top-0 text-right text-xs p-0 m-0 text-gray-400 font-normal\">\n                        <span className=\"font-medium\">{units}</span> {unitString}\n                    </p>\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default DropTarget('Class', quarterTarget, collect)(Quarter);","import React from 'react';\nimport Quarter from './Quarter.js';\nimport Utility from '../Utility.js';\nimport { PlusIcon } from '@heroicons/react/outline';\n\nclass Year extends React.Component {\n\n    render() {\n\n        let content = this.props.content;\n\n        let quarters = [];\n        if (content) {\n            quarters = content.map((quarter, index) => {\n                let {title, color} = Utility.convertQuarter(index);\n                return <Quarter title={title} color={color} content={quarter} key={index} yi={this.props.yi} qi={index}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    addCourse={course => {\n                        this.props.addCourse(course, index);\n                    }}\n                    delCourse={courseIndex => {\n                        this.props.delCourse(courseIndex, index);\n                    }}\n                    moveCourse={this.props.moveCourse}\n                />\n                \n            })\n        }\n\n        return (\n\n            <div className=\"relative p-4 border-4 border-gray-200 rounded-lg m-5 shadow-sm bg-white\n                    compact:border-0 compact:shadow-none compact:my-0 compact:py-2\">\n                <p className=\"text-center text-2xl text-gray-300 font-bold pb-2 compact:text-sm compact:text-black\">\n                    {this.props.title}\n                </p>\n                <div className={`grid grid-cols-1 ${quarters.length === 4 ? 'lg:grid-cols-4' : 'lg:grid-cols-3'} gap-12`}>\n                    {quarters}\n                </div>\n                {quarters.length < 4 &&\n                    <button className=\"absolute right-1 top-1 p-1 px-2 bg-white text-gray-300 hover:text-blue-400 focus:text-blue-500\"\n                            title=\"Add summer quarter\"\n                            onClick={() => {\n                                this.props.addSummerQuarter(this.props.yi);\n                            }}>\n                        <PlusIcon className=\"w-6 h-6\"/>\n                    </button>\n                }\n            </div>\n\n        );\n    }\n\n}\nexport default Year;","import React from 'react';\nimport Year from './Year.js';\nimport Utility from '../Utility.js';\n\nclass Content extends React.Component { \n\n    render() {\n        let content = this.props.content;\n        let years = [];\n        if (content) {\n            years = content.map((year, index) => {\n                return <Year title={Utility.convertYear(index) + ' YEAR'} content={year} yi={index} key={index}\n                    alert={this.props.alert}\n                    switches={this.props.switches}\n                    addCourse={(course, quarter) => {\n                        this.props.addCourse(course, index, quarter);\n                    }}\n                    delCourse={(courseIndex, quarter) => {\n                        this.props.delCourse(courseIndex, index, quarter);\n                    }}\n                    moveCourse={this.props.moveCourse}\n                    addSummerQuarter={this.props.addSummerQuarter}\n                />;\n            })\n        }\n        return (\n            <div>\n                {years}\n            </div>\n        );\n    }\n}\n\nexport default Content;","import React from 'react';\n\nclass Info extends React.Component {\n\n    render() {\n        return (\n            <div className=\"my-4 px-4 py-2 text-black text-center whitespace-nowrap bg-purple-50 border-2 border-purple-800 rounded-3xl\">\n                <p className=\"text-2xl font-normal text-purple-800\">\n                    Plan Northwestern\n                </p>\n                <p className=\"text-sm font-light\">\n                    {this.props.version}\n                </p>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Info;","import React from 'react';\nimport { SaveIcon, PlusIcon, InformationCircleIcon, ExclamationIcon, CogIcon } from '@heroicons/react/outline';\n\nfunction TaskBarButton(props) {\n    return (\n        <button className={`border-2 rounded-md border-gray-400 bg-gray-50 text-gray-600\n                hover:border-${props.color}-500 hover:bg-${props.color}-50 hover:text-${props.color}-500\n                transition-all duration-150 ${props.span ? `col-span-${props.span}` : ''}\n                ${props.active ? `border-${props.color}-400 bg-${props.color}-50 text-${props.color}-400` : `border-solid`}`}\n                onClick={() => {\n                    props.action();\n                }}>\n            {props.name}\n        </button>\n    )\n}\n\nclass TaskBar extends React.Component {\n\n    render() {\n        return (\n\n            <div className=\"grid grid-cols-3 px-4 gap-4 text-xs\">\n\n                <TaskBarButton name=\"About\" color=\"purple\" action={() => {\n\n                    this.props.alert({\n                        title: 'Plan Northwestern',\n                        subtitle: `version ${this.props.version} by Dilan N`,\n                        message: 'An easy and organized way to plan out your classes at Northwestern. Currently in beta with a temporary URL. Data is all saved in the URL, so save the link to your plan to access it later or share with friends.',\n                        confirmButton: 'View on GitHub',\n                        confirmButtonColor: 'purple',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'purple',\n                        icon: (<InformationCircleIcon className=\"h-6 w-6 text-purple-600\" aria-hidden=\"true\" />),\n                        action: () => {\n                            window.open('https://github.com/dilanx/plan-northwestern', '_blank');\n                        },\n                        options: [\n                            {\n                                name: 'about_coming_soon',\n                                title: 'Coming soon',\n                                description: `Check out what's been requested and what I'm working on on the GitHub issues page. Check this out before you send feedback in case someone else has already requested it.`,\n                                buttonTextOn: `See what's coming`,\n                                singleAction: () => {\n                                    window.open('https://github.com/dilanx/plan-northwestern/issues', '_blank');\n                                }\n                            },\n                            {\n                                name: 'about_feedback',\n                                title: 'Share your thoughts!',\n                                description: `Find any bugs, notice any errors in course data, or have any suggestions? Let me know! I'm always interested in making the site better.`,\n                                buttonTextOn: 'Leave feedback',\n                                singleAction: () => {\n                                    window.open('https://github.com/dilanx/plan-northwestern/blob/main/FEEDBACK.md', '_blank');\n                                }\n                            }\n                        ]\n\n                    })\n\n                }}/>\n\n                <TaskBarButton name=\"Save / Share\" color=\"emerald\" action={() => {\n                    this.props.alert({\n                        title: 'Ready to share!',\n                        message: 'All of your plan data is stored in the URL. When you make changes to your plan, the URL is updated to reflect those changes. Save it somewhere, or share with a friend!',\n                        confirmButton: 'Copy to clipboard',\n                        confirmButtonColor: 'emerald',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'emerald',\n                        icon: (<SaveIcon className=\"h-6 w-6 text-emerald-600\" aria-hidden=\"true\" />),\n                        textView: window.location.href,\n                        action: () => {\n                            navigator.clipboard.writeText(window.location.href);\n                        }\n                    });\n                }}/>\n\n                <TaskBarButton name=\"Add Year\" color=\"cyan\" action={() => {\n                    if (this.props.allowAddYear) {\n                        this.props.alert({\n                            title: 'Add a year?',\n                            message: 'This will add another year to your plan. You can remove it by removing all classes from that year and refreshing the page.',\n                            confirmButton: 'Add year',\n                            confirmButtonColor: 'cyan',\n                            cancelButton: 'Close',\n                            iconBackgroundColor: 'cyan',\n                            icon: (<PlusIcon className=\"h-6 w-6 text-cyan-600\" aria-hidden=\"true\" />),\n                            action: () => {\n                                this.props.addYear();\n                            }\n                        });\n                    } else {\n                        this.props.alert({\n                            title: `Can't add another year :(`,\n                            message: `You can't add more than 10 years.`,\n                            confirmButton: 'Close',\n                            confirmButtonColor: 'cyan',\n                            iconBackgroundColor: 'cyan',\n                            icon: (<ExclamationIcon className=\"h-6 w-6 text-cyan-600\" aria-hidden=\"true\" />),\n                        });\n                    }\n                }}/>\n\n                <TaskBarButton name=\"Settings\" color=\"yellow\" action={() => {\n                    this.props.alert({\n                        title: 'Settings',\n                        message: 'Customize your Plan Northwestern experience! These settings are not saved in the URL but are saved in your browser.',\n                        confirmButton: 'Close',\n                        confirmButtonColor: 'yellow',\n                        iconBackgroundColor: 'yellow',\n                        icon: (<CogIcon className=\"h-6 w-6 text-yellow-600\" aria-hidden=\"true\" />),\n                        switches: this.props.switches,\n                        setSwitch: this.props.setSwitch,\n                        options: [\n                            {\n                                name: 'quarter_units',\n                                title: 'Show units per quarter',\n                                description: 'Reveal the unit count per quarter.',\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            },\n                            {\n                                name: 'compact',\n                                title: 'Compact mode',\n                                description: `It's a bit uglier I think, but you can view more on the screen at once without needing to scroll.`,\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            },\n                            {\n                                name: 'more_info',\n                                title: 'Show more info on classes',\n                                description: `See prerequisites and distribution areas on the class items without having to click on their info button. The info won't display if compact mode is enabled.`,\n                                buttonTextOn: 'Enabled',\n                                buttonTextOff: 'Disabled',\n                                saveToStorage: true\n                            }\n                        ]\n                    })\n                }}/>\n\n                <TaskBarButton name=\"Contribute course data\" color=\"red\" active={this.props.switches.contribution} span=\"2\" action={() => {\n                    this.props.setSwitch('contribution', !this.props.switches.contribution);\n                }}/>\n\n                {/* <TaskBarButton name=\"Settings\" color=\"blue\" action={() => {\n                    this.props.alert({\n                        title: 'Settings',\n                        message: `Features like summer classes, more than 4 years, and more are coming soon. Oh also, I found this cool library for drag-and-drop online so I hope to make it possible to drag courses into the quarter you want.`,\n                        confirmButton: 'Close',\n                        confirmButtonColor: 'blue',\n                        iconBackgroundColor: 'blue',\n                        icon: (<CogIcon className=\"h-6 w-6 text-blue-600\" aria-hidden=\"true\" />),\n                    })\n                }}/> */}\n\n                \n\n\n            </div>\n        )\n    }\n\n}\n\nexport default TaskBar;","import React from 'react';\nimport Utility from '../../Utility.js';\nimport { DragSource } from 'react-dnd'\n\nconst classSource = {\n\n    beginDrag(props, monitor, component) {\n        const item = { course: props.course }\n        return item;\n    }\n\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass SearchClass extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // let prereqs = this.props.course.prereqs;\n\n        // let prereq = [];\n\n        // if (prereqs) {\n        //     <div className={`bg-${color}-50 m-1 p-1 rounded-xl border border-${color}-500`} key={i + ' ' + j}>\n        //                     <p className={`m-0 p-0 text-xs font-light text-${color}-500`}>\n        //                         {prereqs[i][j]}\n        //                     </p>\n        //     </div>\n        //     for (let i = 0; i < prereqs.length; i++) {\n        //         for (let j = 0; j < prereqs[i].length; j++) {\n        //             prereq.push(\n                        \n        //             )\n        //         }\n        //     }\n        // }\n\n        let distros = [];\n        let distroStrings = Utility.convertDistros(this.props.course.distros);\n\n        for (let i = 0; i < distroStrings.length; i++) {\n            distros.push(\n                <p className=\"m-0 p-0 text-xs text-gray-500 font-light\" key={`distro-${i}`}>\n                    {distroStrings[i]}\n                </p>\n            )\n        }\n\n        this.state = {\n            distros: distros\n        }\n\n    }\n\n    render() {\n        const { isDragging, connectDragSource } = this.props;\n        return connectDragSource(\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${this.props.color}-100\n            rounded-lg border-2 border-${this.props.color}-300 border-opacity-60\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 m-4 cursor-pointer ${isDragging ? 'cursor-grab ' : 'cursor-pointer'}`}\n            onClick={() => {\n                if (this.props.select) this.props.select(this.props.course);\n            }}>\n                <p className=\"text-lg font-bold\">\n                    {this.props.course.id}\n                </p>\n                <p className=\"text-sm\">\n                    {this.props.course.name}\n                </p>\n                <p className=\"text-xs mt-4 text-gray-700\">\n                    {this.props.course.description}\n                </p>\n                {this.props.course.prereqs &&\n                    <div className=\"mt-4\">\n                        <p className=\"text-xs text-gray-500 font-bold\">\n                            PREREQUISITES\n                        </p>\n                        <p className=\"m-0 p-0 text-xs text-gray-500 font-light\">\n                            {this.props.course.prereqs}\n                        </p>\n                    </div>\n                }\n                {this.state.distros.length > 0 &&\n                    <div className=\"mt-4\">\n                        <p className=\"text-xs text-gray-500 font-bold\">\n                            DISTRIBUTION AREAS\n                        </p>\n                        {this.state.distros}\n                    </div>\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default DragSource('Class', classSource, collect)(SearchClass);","import Utility from '../../Utility.js';\n\nfunction AddButton(props) {\n    return (\n        <button className={`text-center bg-white border-2 border-${props.color}-300 text-${props.color}-300 p-2 block\n        mx-auto w-2/3 rounded-md hover:border-${props.color}-500 hover:text-${props.color}-500 transition-all duration-150 my-2`} onClick={() => {\n            props.action();\n        }}>\n            {props.text}\n        </button>\n    )\n}\n\nfunction AddButtonSection(props) {\n\n    let withSummer = (\n        <div className=\"grid grid-cols-4 gap-0\">\n            <AddButton text=\"F\" color=\"orange\" action={() => {props.action(0);}}/>\n            <AddButton text=\"W\" color=\"red\" action={() => {props.action(1);}}/>\n            <AddButton text=\"Sp\" color=\"emerald\" action={() => {props.action(2);}}/>\n            <AddButton text=\"Su\" color=\"blue\" action={() => {props.action(3);}}/>\n        </div>\n    )\n\n    let withoutSummer = (\n        <div className=\"grid grid-cols-3 gap-0\">\n            <AddButton text=\"Fall\" color=\"orange\" action={() => {props.action(0);}}/>\n            <AddButton text=\"Winter\" color=\"red\" action={() => {props.action(1);}}/>\n            <AddButton text=\"Spring\" color=\"emerald\" action={() => {props.action(2);}}/>\n        </div>\n    )\n\n    return (\n        <div className=\"py-2\">\n            <p className=\"text-center text-gray-500 font-bold p-2 text-sm\">\n                {props.title}\n            </p>\n            {props.size === 4 ? withSummer : withoutSummer}\n        </div>\n    )\n}\n\n\n\nexport default function AddButtons(props) {\n\n    let data = props.data;\n    \n    let years = data.length;\n    \n    let sections = [];\n    for (let y = 0; y < years; y++) {\n        sections.push(<AddButtonSection title={`${Utility.convertYear(y)} YEAR`} size={data[y].length} action={quarter => {props.action(y, quarter);}} key={y}/>);\n    }\n    \n\n    return (\n        <div className=\"\">\n            {sections}\n        </div>\n    )\n\n}","import React from 'react';\nimport courses from '../../data/courses.json';\nimport SearchClass from './SearchClass.js';\nimport AddButtons from './AddButtons.js';\nimport CourseManager from '../../CourseManager.js';\nimport { SearchIcon, BookOpenIcon, ArrowRightIcon, SaveIcon, DotsHorizontalIcon } from '@heroicons/react/outline';\n\nconst SEARCH_RESULT_LIMIT = 100;\n\nfunction MiniContentBlock(props) {\n\n    return (\n        <div className=\"text-center p-4\">\n            <div className=\"mx-auto my-1 flex items-center justify-center text-gray-500\">\n                {props.icon}\n            </div>\n            <p className=\"text-lg font-medium text-gray-500\">\n                {props.title}\n            </p>\n            <p className=\"text-sm font-light text-gray-400\">\n                {props.text}\n            </p>\n        </div>\n    )\n\n}\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n            current: null\n        }\n\n    }\n\n    searchMessage(title, subtitle) {\n        return (\n            <div className=\"text-center text-gray-600 px-4\">\n                <p className=\"text-lg font-medium\">\n                    {title}\n                </p>\n                <p className=\"text-sm font-light\">\n                    {subtitle}\n                </p>\n            </div>\n        )\n    }\n\n    getResults() {\n\n        let search = this.state.search.toLowerCase();\n        if (search.length === 0) {\n            return (\n                <div>\n                    <MiniContentBlock\n                        icon={<SearchIcon className=\"w-6 h-6\"/>}\n                        title=\"Search\"\n                        text=\"Use the search bar to search across every undergraduate course at Northwestern.\"\n                    />\n                    <MiniContentBlock\n                        icon={<BookOpenIcon className=\"w-6 h-6\"/>}\n                        title=\"Learn\"\n                        text=\"Get information like the course description, prerequisites, and more, all from right here. We'll help you make sure prereqs are met when you're adding courses, too.\"\n                    />\n                    <MiniContentBlock\n                        icon={<ArrowRightIcon className=\"w-6 h-6\"/>}\n                        title=\"Drag\"\n                        text=\"Drag courses from this search area into the quarter you want. Alternatively, you can click on the course and select the quarter you want to add it to.\"\n                    />\n                    <MiniContentBlock\n                        icon={<SaveIcon className=\"w-6 h-6\"/>}\n                        title=\"Save and share\"\n                        text=\"The URL updates as you modify your plan. Save it somewhere or share it with others.\"\n                    />\n                </div>\n            )\n        }\n        if (search.length < 3) {\n            return this.searchMessage('Keep typing...', `You'll need at least 3 characters.`);\n        }\n\n        let filtered = courses.courses.filter(course => {\n            if (course.id.toLowerCase().includes(search)) return true;\n            if (course.name.toLowerCase().includes(search)) return true;\n            if (course.id.toLowerCase().replace('_', ' ').includes(search)) return true;\n            return false;\n        });\n\n        let courseList = [];\n        let count = 0;\n        for (let course of filtered) {\n            courseList.push(\n                <SearchClass color={CourseManager.getCourseColor(course.id)} course={course} key={course.id} select={classData => {\n                    this.setState({current: classData});\n                }}/>\n            )\n            count++;\n            if (count >= SEARCH_RESULT_LIMIT) {\n                courseList.push(\n                    <MiniContentBlock\n                        icon={<DotsHorizontalIcon className=\"w-6 h-6\"/>}\n                        title={`and ${filtered.length - count} more.`}\n                        text=\"There are too many results to display. You'll need to narrow your search to get more.\"\n                        key=\"too-many\"/>\n                )\n                break;\n            }\n        }\n        if (courseList.length === 0) {\n            return this.searchMessage('Aw, no results.', `Try refining your search.`);\n        }\n\n        return courseList;\n\n    }\n\n    render() {\n\n        let singleClassView = false;\n\n        let searchField = (\n            <div className=\"sticky top-0 p-2 mb-2 bg-white z-10 rounded-lg\">\n                <input className=\"block m-4 mx-auto w-11/12 border-2 border-gray-300 shadow-md\n                rounded-lg hover:border-gray-500 outline-none focus:border-black text-lg p-2 px-4\n                bg-white transition-all duration-150\" value={this.state.search} placeholder=\"Search for classes...\" onChange={event => {\n                    this.setState({search: event.target.value})\n                }}/>\n            </div>\n        )\n        \n        let selectedClass = null;\n        let addButtons = null;\n        let exitButton = null;\n\n        if (this.state.current) {\n            singleClassView = true;\n\n            selectedClass = (\n                <SearchClass color={CourseManager.getCourseColor(this.state.current.id)} course={this.state.current}/>\n            )\n\n            addButtons = (\n                    <AddButtons action={(year, quarter) => {\n                        this.props.addCourse(this.state.current, year, quarter);\n                        this.setState({current: null});\n                    }} data={this.props.data}/>\n            )\n            exitButton = (\n                <button className=\"block mx-auto bg-white border-2 border-gray-400 text-gray-400\n                w-2/3 p-2 my-4 hover:border-black hover:text-black transition-all duration-150 rounded-md\" onClick={() => {\n                    this.setState({current: null});\n                }}>\n                    Back\n                </button>\n            );\n        }\n\n\n        return (\n            <div className=\"border-4 border-gray-400 mt-4 mb-2 rounded-lg shadow-lg h-full\n            overflow-y-scroll overscroll-contain no-scrollbar\">\n                {!singleClassView && searchField}\n                {!singleClassView && this.getResults()}\n\n                {singleClassView && selectedClass}\n                {singleClassView && addButtons}\n                {singleClassView && exitButton}\n            </div>\n        )\n    }\n\n}\n\nexport default Search;","import React from 'react';\nimport CourseManager from '../../CourseManager.js';\n\nclass StatsBar extends React.Component {\n\n    render() {\n\n        let units = CourseManager.getTotalCredits(this.props.data);\n\n\n        let unitString = 'units';\n        if (units === 1) {\n            unitString = 'unit';\n        }\n\n        return (\n            <div className=\"border-2 border-gray-300 rounded-lg mt-2 mb-4 p-1\">\n                <p className=\"text-center text-sm font-light text-gray-800\">\n                    <span className=\"font-medium\">{units}</span> total {unitString}\n                </p>\n            </div>\n        )\n\n    }\n\n\n}\n\nexport default StatsBar;","import React from 'react';\nimport CourseManager from '../../CourseManager.js';\nimport { DropTarget } from 'react-dnd';\nimport { XIcon } from '@heroicons/react/outline';\n\nconst contributionCourseTarget = {\n    drop(props, monitor, component) {\n        if (monitor.didDrop()) {\n            return;\n        }\n        const item = monitor.getItem();\n        props.dragCourse(item.course, props.index);\n        return { moved: false };\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        isOverCurrent: monitor.isOver({ shallow: true }),\n        canDrop: monitor.canDrop(),\n        itemType: monitor.getItemType()\n    }\n}\n\nfunction ContributionCourseOffered() {\n    return (\n        <div className=\"block\">\n            <p>This class is offered...</p>\n            <div className=\"inline-block\">\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-fall\" name=\"offered-fall\" value=\"Test\"/>\n                    Fall quarter\n                </label>\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-winter\" name=\"offered-winter\" value=\"Test\"/>\n                    Winter quarter\n                </label>\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-spring\" name=\"offered-spring\" value=\"Test\"/>\n                    Spring quarter\n                </label>\n                <label className=\"p-1\">\n                    <input className=\"m-2\"\n                        type=\"checkbox\" id=\"offered-summer\" name=\"offered-summer\" value=\"Test\"/>\n                    Summer quarter\n                </label>\n            </div>\n        </div>\n    )\n}\n\nclass ContributionCourse extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hovered: false,\n            course: null\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!prevProps.isOver && this.props.isOver) {\n            this.setState({ hovered: true });\n        }\n      \n        if (prevProps.isOver && !this.props.isOver) {\n            this.setState({ hovered: false });\n        }\n    }\n\n    render() {\n\n        const { connectDropTarget } = this.props;\n        return connectDropTarget(\n            <div className={`relative grid gap-4 grid-cols-4 p-8 m-4 border-2 rounded-lg shadow-lg\n                ${this.state.hovered ? `border-dashed border-emerald-500 bg-emerald-300 bg-opacity-50` : `border-solid bg-white ${this.props.course ? `border-${CourseManager.getCourseColor(this.props.course.id)}-200` : `border-gray-400`}`}`}>\n                \n                {this.props.multiple &&\n                    <button className=\"absolute right-1 top-1 p-1 px-2 bg-white text-gray-300 hover:text-red-400 focus:text-red-500\"\n                            title=\"Remove\"\n                            onClick={() => {\n                                this.props.removeCourse(this.props.index);\n                            }}>\n                        <XIcon className=\"w-6 h-6\"/>\n                    </button>\n                        \n                    }\n\n                <div className=\"\">\n                    <p className=\"text-lg font-bold text-black\">\n                        {this.props.course ? this.props.course.id : 'SELECT A COURSE'}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                        {this.props.course ? this.props.course.name : 'Drag a course here.'}\n                    </p>\n                </div>\n\n                <div className=\"col-span-3 text-gray-700 text-sm space-y-4\">\n\n                    {this.props.course &&\n                        <ContributionCourseOffered/>}\n\n                </div>\n\n                \n\n            </div>\n        )\n\n    }\n\n}\n\nexport default DropTarget('Class', contributionCourseTarget, collect)(ContributionCourse);","import React from 'react';\nimport ContributionCourse from './ContributionCourse.js';\n\nclass Contribution extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courses: [],\n            shown: 1\n        }\n    }\n\n    dragCourse(course, index) {\n        let courses = this.state.courses;\n        courses[index] = course;\n        this.setState({courses: courses});\n    }\n\n    removeCourse(index, isEmpty) {\n        if (!isEmpty) {\n            let courses = this.state.courses;\n            courses.splice(index, 1);\n            this.setState({courses: courses});\n        }\n        this.setState({shown: this.state.shown - 1});\n    }\n\n    render() {\n\n        let cc = [];\n        let s = 0;\n\n        let multiple = this.state.shown > 1;\n\n        for (let i = 0; i < this.state.courses.length; i++) {\n            cc.push(\n                <ContributionCourse\n                    course={this.state.courses[i]}\n                    alert={this.props.alert}\n                    index={i}\n                    multiple={multiple}\n                    dragCourse={(course, index) => this.dragCourse(course, index)}\n                    removeCourse={index => this.removeCourse(index, false)}\n                    key={`cc-${i}`}/>\n            )\n            s++;\n        }\n\n        for (; s < this.state.shown; s++) {\n            cc.push(\n                <ContributionCourse\n                    alert={this.props.alert}\n                    index={s}\n                    multiple={multiple}\n                    dragCourse={(course, index) => this.dragCourse(course, index)}\n                    removeCourse={index => this.removeCourse(index, true)}\n                    key={`cc-${s}`}/>\n            )\n        }\n\n        return (\n            <div className=\"relative p-4 border-4 border-red-400 rounded-lg m-5 shadow-sm bg-white\">\n                <p className=\"text-center text-2xl text-red-400 font-bold pb-2\">\n                    CONTRIBUTION\n                </p>\n\n                <p className=\"text-center text-sm text-gray-600 py-2 lg:px-24\">\n                    There's a lot of data that would be useful to have here. While a lot of the main course data was grabbed in bulk from the Northwestern course catalog site,\n                    there's still a lot missing, like which courses are offered during what quarters, prerequisites for every course, which courses fulfill specific major requirements,\n                    and more. A lot of that is department/major specific, and is spread out over several websites that may only have data for the current year, or might not even have\n                    been updated in the last few years. The current course data file is around 22000 lines, and updating that manually doesn't sound fun.\n                </p>\n\n                <p className=\"text-center text-sm text-gray-800 py-2 lg:px-40\">\n                    Instead, you can share what you know about Northwestern courses to improve the data!\n                </p>\n\n                <div className=\"block sm:hidden\">\n                    <p className=\"text-center text-md text-red-400 py-2\">\n                        Sadly, the contribution feature is not available on mobile devices.\n                        Revisit on a larger computer to get started contributing data!\n                    </p>\n                </div>\n\n                <div className=\"hidden sm:block\">\n\n                    <p className=\"text-center font-md font-medium text-red-500 p-2\">\n                        Submission unavailable until I finish making this feature.\n                    </p>\n\n                    {cc}\n\n                    <button className=\"block mt-2 mb-4 mx-auto py-2 px-4 bg-orange-400 rounded-lg text-sm font-medium text-white opacity-100 hover:opacity-60 transition-all duration-150 shadow-md\"\n                            onClick={() => {\n                                this.setState({shown: this.state.shown + 1});\n                            }}>\n                        Add more data\n                    </button>\n\n                    <button className=\"block mt-4 mb-2 mx-auto py-2 px-20 bg-emerald-500 rounded-lg text-md font-medium text-white opacity-60\n                        transition-all duration-150 cursor-not-allowed shadow-md\">\n                        SUBMIT\n                    </button>\n\n                    <p className=\"text-center text-xs text-gray-500 font-bold\">\n                        You can't submit yet since I haven't finished making this lol\n                    </p>\n\n                </div>\n\n            </div>\n        )\n\n    }\n\n}\n\nexport default Contribution;","import { useState, useRef } from 'react'\nimport { Dialog } from '@headlessui/react'\n\nexport default function Alert(props) {\n\n    let [isOpen, setIsOpen] = useState(true)\n\n    let cancelButtonRef = useRef(null);\n\n    function close() {\n        setIsOpen(false);\n        props.onClose();\n    }\n\n    function confirm() {\n        setIsOpen(false);\n        props.onConfirm();\n    }\n\n    let data = props.data;\n\n    let extraList = [];\n    if (data.extras) {\n        let i = 0;\n        data.extras.forEach(extra => {\n            extraList.push(\n                <div className=\"mt-4\" key={`alert-extra-${i}`}>\n                    <p className=\"text-xs text-gray-500 font-bold\">\n                        {extra.title}\n                    </p>\n                    <p className=\"m-0 p-0 text-sm text-gray-500 font-light\">\n                        {extra.content}\n                    </p>\n                </div>\n            )\n        })\n    }\n\n    let optionList = [];\n\n    if (data.options) {\n        let i = 0;\n        data.options.forEach(option => {\n            let enabled = false;\n            if (!option.singleAction) enabled = data.switches[option.name];\n\n            optionList.push(\n                <div className=\"grid grid-cols-1 sm:grid-cols-5 p-2 m-2\" key={`alert-option-${i}`}>\n                    <div className=\"col-span-1 sm:col-span-3\">\n                        <p className=\"text-sm font-bold\">\n                            {option.title}\n                        </p>\n                        <p className=\"text-xs text-gray-600 mr-2\">\n                            {option.description}\n                        </p>\n                    </div>\n                    <div className=\"col-span-1 sm:col-span-2\">\n                        {!option.singleAction && (enabled ? \n                            <button className=\"block mx-auto bg-emerald-400 text-white text-sm font-medium opacity-100 hover:opacity-60 transition-all duration-150\n                            m-1 p-2 w-full rounded-md shadow-md\"\n                                    onClick={() => {\n                                        data.setSwitch(option.name, false, option.saveToStorage);\n                                    }}>\n                                {option.buttonTextOn}\n                            </button>\n                            :\n                            <button className=\"block mx-auto bg-red-400 text-white text-sm font-medium opacity-100 hover:opacity-60 transition-all duration-150\n                                    m-1 p-2 w-full rounded-md shadow-md\"\n                                    onClick={() => {\n                                        data.setSwitch(option.name, true, option.saveToStorage);\n                                    }}>\n                                {option.buttonTextOff}\n                            </button>\n                        )}\n                        {option.singleAction &&\n                            <button className=\"block mx-auto bg-black text-white text-sm font-medium opacity-100 hover:opacity-60 transition-all duration-150\n                                    m-1 p-2 w-full rounded-md shadow-md\"\n                                    onClick={() => {\n                                        option.singleAction();\n                                    }}>\n                                {option.buttonTextOn}\n                            </button>\n                        }\n                    </div>\n                </div>\n            )\n            i++;\n        })\n        \n    }\n\n    return (\n        <Dialog open={isOpen} onClose={() => {close()}} initialFocus={cancelButtonRef} className=\"fixed z-10 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                    &#8203;\n                </span>\n                <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\"/>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                        <div className=\"sm:flex sm:items-start\">\n                            <div className={`mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-${data.iconBackgroundColor}-100 sm:mx-0 sm:h-10 sm:w-10`}>\n                                {data.icon}\n                            </div>\n                            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                                <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                    {data.title}\n                                </Dialog.Title>\n\n                                {data.subtitle &&\n                                    <div>\n                                        <p className=\"text-md font-light text-gray-900\">\n                                            {data.subtitle}\n                                        </p>\n                                    </div>\n                                }\n                                <div className=\"mt-2\">\n                                    <p className=\"text-sm text-gray-500\">\n                                    {data.message}\n                                    </p>\n                                </div>\n                                {extraList.length > 0 &&\n                                    extraList\n                                }\n                                {data.textView &&\n                                    <div>\n                                        <p className=\"bg-gray-200 mt-4 p-1 px-4 font-mono text-sm rounded-md md:w-96 overflow-scroll whitespace-nowrap overscroll-contain no-scrollbar\">\n                                            {data.textView}\n                                        </p>\n                                    </div>\n                                }\n                            </div>\n                                \n                        </div>\n                    </div>\n\n                    {optionList.length > 0 &&\n                        optionList\n                    }\n\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button\n                            type=\"button\"\n                            className={`w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-${data.confirmButtonColor}-500 text-base font-medium text-white\n                            hover:bg-${data.confirmButtonColor}-600 focus:bg-${data.confirmButtonColor}-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm`}\n                            onClick={() => {confirm();}}>\n                            {data.confirmButton}\n                        </button>\n                        {data.cancelButton &&\n                            <button\n                                ref={cancelButtonRef}\n                                type=\"button\"\n                                className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2\n                                bg-white text-base font-medium text-gray-700 hover:bg-gray-100 focus:bg-gray-200 focus:outline-none sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                                onClick={() => {close();}}>\n                                {data.cancelButton}\n                            </button>}\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n\n}","\nimport React from 'react';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Content from './components/Content.js';\nimport CourseManager from './CourseManager.js';\nimport Utility from './Utility.js';\nimport Info from './components/menu/Info.js';\nimport TaskBar from './components/menu/TaskBar.js';\nimport Search from './components/search/Search.js';\nimport StatsBar from './components/menu/StatsBar.js';\nimport Contribution from './components/contribution/Contribution.js';\nimport Alert from './components/menu/Alert.js';\n\nimport { ExclamationIcon, PlusIcon } from '@heroicons/react/outline';\n\nconst VERSION = '0.1.16 (beta)';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        let failed = false;\n        params.forEach((val, key, par) => {\n            if (key.startsWith('y')) {\n                if (failed) return;\n                let newData = CourseManager.loadData(key, val, data);\n                if (newData == null) {\n                    failed = true;\n                    return;\n                }\n                data = newData;\n            }\n        })\n\n        let defaultAlert = null;\n\n        if (failed) {\n            data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n            defaultAlert = {\n                title: 'Unable to load plan.',\n                message: `The plan URL you entered is not valid. Ensure that it hasn't been manualy modified.`,\n                confirmButton: 'What a shame.',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />)\n            }\n        }\n\n        let defaultSwitches = Utility.loadSwitchesFromStorage();\n\n        this.state = {\n            data: data,\n            alert: defaultAlert,\n            switches: defaultSwitches\n        }\n\n    }\n\n    setSwitch(key, val, save=false) {\n        let switches = this.state.switches;\n        switches[key] = val;\n        this.setState({switches: switches});\n        if (save) {\n            Utility.saveSwitchToStorage(key, val);\n        }\n    }\n\n    showAlert(alertData) {\n        this.setState({\n            alert: alertData\n        })\n    }\n\n    postShowAlert() {\n        this.setState({\n            alert: null\n        })\n    }\n\n    actuallyAddCourse(course, year, quarter) {\n        let data = this.state.data;\n        data[year][quarter].push(course);\n        data[year][quarter].sort((a, b) => {\n            return a.id.localeCompare(b.id);\n        });\n        this.setState({data: data});\n        CourseManager.saveData(data);\n    }\n\n    addCourse(course, year, quarter) {\n\n        let data = this.state.data;\n\n        let exists = CourseManager.duplicateCourse(course, data);\n\n        if (exists) {\n            this.showAlert({\n                title: 'Course already planned.',\n                message: `You already have ${course.id} on your plan during the ${Utility.convertQuarter(exists.quarter).title.toLowerCase()} quarter of your ${Utility.convertYear(exists.year).toLowerCase()} year.`,\n                cancelButton: 'Go back',\n                confirmButton: 'Add anyway',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />),\n                action: () => {\n                    this.actuallyAddCourse(course, year, quarter);\n                }\n            })\n            return;\n        }\n\n        let unitCount = CourseManager.getQuarterCredits(data[year][quarter]) + parseFloat(course.units);\n\n        if (unitCount > 5.5) {\n            this.showAlert({\n                title: 'Too many classes.',\n                message: `With this course, you'll have ${unitCount} units worth of classes this quarter, which is over Northwestern's maximum of 5.5 units.`,\n                cancelButton: 'Go back',\n                confirmButton: 'Add anyway',\n                confirmButtonColor: 'red',\n                iconBackgroundColor: 'red',\n                icon: (<ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />),\n                action: () => {\n                    this.actuallyAddCourse(course, year, quarter);\n                }\n            })\n            return;\n        }\n\n        this.actuallyAddCourse(course, year, quarter);\n\n    }\n\n    delCourse(courseIndex, year, quarter) {\n        let data = this.state.data;\n        data[year][quarter].splice(courseIndex, 1);\n        this.setState({data: data});\n        CourseManager.saveData(data);\n    }\n\n    moveCourse(course, oldYear, oldQuarter, newYear, newQuarter) {\n        let data = this.state.data;\n        for (let c = 0; c < data[oldYear][oldQuarter].length; c++) {\n            if (data[oldYear][oldQuarter][c].id === course.id) {\n                this.delCourse(c, oldYear, oldQuarter);\n                break;\n            }\n        }\n        this.addCourse(course, newYear, newQuarter);\n    }\n\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <div className=\"\">\n\n                    {this.state.alert &&\n                        <Alert data={this.state.alert}\n                            onClose={() => {\n                                this.postShowAlert();\n                            }}\n                            onConfirm={() => {\n                                if (this.state.alert.action) {\n                                    this.state.alert.action();\n                                }\n                                this.postShowAlert();\n                            }\n                    }/>}\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-8\">\n                        <div className=\"col-span-2 px-4 h-192 md:h-screen flex flex-col\">\n                            <Info version={VERSION}/>\n                            <TaskBar\n                                alert={alertData => {\n                                    this.showAlert(alertData)\n                                }}\n                                allowAddYear={this.state.data.length < 10}\n                                addYear={() => {\n                                    let data = this.state.data;\n                                    data.push([[], [], []]);\n                                    this.setState({data: data})\n                                }}\n                                version={VERSION}\n                                switches={this.state.switches}\n                                setSwitch={(key, val, save=false) => {this.setSwitch(key, val, save)}}\n                            />\n                            <Search\n                                data={this.state.data}\n                                addCourse={(course, year, quarter) => {\n                                    this.addCourse(course, year, quarter);\n                                }}\n                            />\n                            <StatsBar\n                                data={this.state.data}\n                            />\n                        </div>\n                        \n                        <div className={`${this.state.switches.compact ? 'compact-mode ' : ''} col-span-6 block pt-0 h-screen md:overflow-y-scroll no-scrollbar`}>\n                            {this.state.switches.contribution &&\n                                <Contribution\n                                alert={alertData => {\n                                    this.showAlert(alertData)\n                                }}/>\n                                \n                            }\n                            \n                            <Content\n                                content={this.state.data}\n                                switches={this.state.switches}\n                                setSwitch={(key, val) => {this.setSwitch(key, val)}}\n                                alert={alertData => {\n                                    this.showAlert(alertData)\n                                }}\n                                addCourse={(course, year, quarter) => {\n                                    this.addCourse(course, year, quarter);\n                                }}\n                                delCourse={(courseIndex, year, quarter) => {\n                                    this.delCourse(courseIndex, year, quarter);\n                                }}\n                                moveCourse={(course, oldYear, oldQuarter, newYear, newQuarter) => {\n                                    this.moveCourse(course, oldYear, oldQuarter, newYear, newQuarter);\n                                }}\n                                addSummerQuarter={year => {\n\n                                    this.showAlert({\n                                        title: 'Add summer quarter to this year?',\n                                        message: `This will add a summer quarter to your ${Utility.convertYear(year).toLowerCase()} year. You can remove it by removing all classes from that quarter and refreshing the page.`,\n                                        confirmButton: 'Add quarter',\n                                        confirmButtonColor: 'blue',\n                                        cancelButton: 'Close',\n                                        iconBackgroundColor: 'blue',\n                                        icon: (<PlusIcon className=\"h-6 w-6 text-blue-600\" aria-hidden=\"true\" />),\n                                        action: () => {\n                                            let data = this.state.data;\n                                            data[year].push([]);\n                                            this.setState({data: data});\n                                        }\n                                    });\n                                    \n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </DndProvider>\n        );\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}