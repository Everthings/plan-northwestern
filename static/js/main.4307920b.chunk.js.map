{"version":3,"sources":["Class.js","Utility.js","Quarter.js","Year.js","Content.js","SearchClass.js","AddButtons.js","Search.js","Info.js","TaskBar.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Class","className","this","props","color","id","name","onClick","delClass","React","Component","encodeCourse","courseName","encoded","i","length","encodedChar","charCodeAt","toString","Utility","checkPrereq","courseData","year","quarter","data","prereqs","foundPrereqs","y","q","j","c","push","getCourse","courses","course","getCourseColor","subj","split","majors","loadData","key","val","parseInt","substring","classes","classData","failed","forEach","encodedCourse","decoded","String","fromCharCode","decodeCourse","sort","a","b","localeCompare","e","console","error","saveData","params","URLSearchParams","map","join","set","window","history","replaceState","location","pathname","convertYear","num","convertQuarter","title","prereqColor","Quarter","content","index","Year","quarters","courseIndex","Content","years","SearchClass","prereq","state","select","description","AddButton","action","text","AddButtonSection","AddButtons","Search","search","current","toLowerCase","filtered","filter","includes","replace","courseList","setState","singleClassView","searchField","value","placeholder","onChange","event","target","selectedClass","addButtons","exitButton","addCourse","getResults","Info","version","TaskBarButton","TaskBar","alert","subtitle","message","confirmButton","confirmButtonColor","cancelButton","iconBackgroundColor","icon","open","textView","href","navigator","clipboard","writeText","Alert","useState","isOpen","setIsOpen","cancelButtonRef","useRef","close","onClose","initialFocus","Overlay","Title","as","type","onConfirm","ref","VERSION","App","par","startsWith","newData","log","alertData","postShowAlert","showAlert","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4307920b.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Class extends React.Component {\n    render() {\n        return (\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${this.props.color}-100\n            border-2 border-${this.props.color}-300 border-opacity-60 overflow-scroll whitespace-nowrap\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 group`}>\n                <p className=\"text-md font-bold\">\n                    {this.props.id}\n                </p>\n                <p className=\"text-xs\">\n                    {this.props.name}\n                </p>\n                <button className=\"absolute top-3 bottom-3 right-1 px-2 rounded-lg\n                border-2 border-dotted border-gray-800 text-gray-800 text-xs opacity-20\n                hover:border-red-500 hover:text-red-500 hover:opacity-100\n                transition-all duration-150 hidden group-hover:block\" onClick={() => {\n                    this.props.delClass();\n                }}>\n                    del\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Class;","import courses from './data/courses.json';\n\nfunction encodeCourse(courseName) {\n\n    let encoded = '';\n\n    for (let i = 0; i < courseName.length; i++) {\n\n        let char = courseName[i];\n\n        let encodedChar = char.charCodeAt(0).toString(16);\n\n        if (encodedChar.length === 1) {\n            encodedChar = '0' + encodedChar;\n        }\n\n        encoded += encodedChar;\n\n    }\n\n    return encoded;\n\n}\n\nfunction decodeCourse(encodedCourse) {\n\n    let decoded = '';\n\n    for (let i = 0; i < encodedCourse.length; i += 2) {\n\n        if (i + 2 > encodedCourse.length) {\n            break;\n        }\n\n        let encodedChar = encodedCourse[i] + encodedCourse[i + 1];\n\n        let char = String.fromCharCode(parseInt(encodedChar, 16));\n\n        decoded += char;\n\n    }\n\n    return decoded;\n\n}\nlet Utility = {\n\n    checkPrereq: (courseData, year, quarter, data) => {\n\n        if (!courseData.prereqs || courseData.prereqs.length === 0) {\n            return true;\n        }\n\n        for (let i = 0; i < courseData.prereqs.length; i++) {\n\n            let prereqs = courseData.prereqs[i];\n            let foundPrereqs = [];\n\n            for (let y = 0; y <= year; y++) {\n                for (let q = 0; q < data[y].length; q++) {\n\n                    if (y === year && q > quarter) break;\n\n                    for (let j = 0; j < prereqs.length; j++) {\n\n                        for (let c = 0; c < data[y][q].length; c++) {\n\n                            if (data[y][q][c].id === prereqs[j]) {\n                                foundPrereqs.push(data[y][q][c].id);\n                            }\n\n                        }\n\n                    }\n\n                }\n            }\n\n            if (foundPrereqs.length === prereqs.length) {\n                return true;\n            }\n\n        }\n\n        return false;\n\n    },\n\n    getCourse: name => {\n        for (let course of courses.courses) {\n            if (course.id === name) {\n                return course;\n            }\n        }\n        return null;\n    },\n\n    getCourseColor: name => {\n        let subj = name.split(' ')[0];\n        return courses.majors[subj].color;\n    },\n\n    loadData: (key, val, data) => {\n\n        try {\n\n            let year = parseInt(key.substring(1).split('q')[0]);\n            let quarter = parseInt(key.split('q')[1]);\n            let classes = val.split(',');\n            let classData = [];\n\n            let failed = false;\n            classes.forEach(name => {\n                \n                let course = decodeCourse(name);\n                let c = Utility.getCourse(course);\n                if (c == null) {\n                    failed = true;\n                    return;\n                }\n\n                classData.push(c);\n\n            });\n\n            classData.sort((a, b) => {\n                return a.id.localeCompare(b.id);\n            });\n\n            if (failed) return null;\n\n            while (data.length < year + 1) {\n                data.push([]);\n            }\n\n            while (data[year].length < quarter + 1) {\n                data[year].push([]);\n            }\n\n            data[year][quarter] = classData;\n\n            return data;\n\n        } catch (e) {\n            console.error(e);\n            return null;\n\n        }\n\n    },\n\n    saveData: data => {\n\n        let params = new URLSearchParams();\n\n        for (let i = 0; i < data.length; i++) {\n            for (let j = 0; j < data[i].length; j++) {\n                let classes = data[i][j].map(course => encodeCourse(course.id)).join(',');\n                if (classes.length > 0) params.set(`y${i}q${j}`, classes);\n            }\n        }\n\n        window.history.replaceState({}, '', `${window.location.pathname}?${params.toString()}`);\n\n    },\n\n    convertYear: num => {\n        switch(num) {\n            case 0:\n                return 'FIRST';\n            case 1:\n                return 'SECOND';\n            case 2:\n                return 'THIRD';\n            case 3:\n                return 'FOURTH';\n            case 4:\n                return 'FIFTH';\n            case 5:\n                return 'SIXTH';\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    convertQuarter: num => {\n        switch (num) {\n            case 0:\n                return {title: 'FALL', color: 'orange'};\n            case 1:\n                return {title: 'WINTER', color: 'red'};\n            case 2:\n                return {title: 'SPRING', color: 'emerald'};\n            case 3:\n                return 'SUMMER';\n            default:\n                return 'UNKNOWN';\n        }\n    },\n\n    prereqColor: num => {\n        switch (num) {\n            case 0:\n                return 'red';\n            case 1:\n                return 'blue';\n            case 2:\n                return 'green';\n            case 3:\n                return 'yellow';\n            case 4:\n                return 'purple';\n            default:\n                return 'gray';\n        }\n    }\n\n}\n\nexport default Utility;","import React from 'react';\nimport Class from './Class.js';\nimport Utility from './Utility.js';\n\nclass Quarter extends React.Component {\n\n    render() {\n\n        let content = this.props.content;\n        let classes = [];\n        if (content) {\n            if (content.length > 0) {\n                classes = content.map((classData, index) => {\n                    return <Class id={classData.id} name={classData.name} color={Utility.getCourseColor(classData.id)} key={index}\n                    delClass={() => {\n                        this.props.delClass(index);\n                    }}/>\n                })\n            } else {\n                classes = (\n                    <div className={`p-2 rounded-lg bg-white border-2 border-dashed border-black\n                    overflow-scroll whitespace-nowrap opacity-40`}>\n                        <p className=\"text-md font-bold\">\n                            No classes to show.\n                        </p>\n                        <p className=\"text-xs\">\n                            Use the search bar.\n                        </p>\n                    </div>\n                )\n            }\n\n        }\n\n        return (\n            <div className={`block bg-${this.props.color}-50 rounded-lg px-8 pt-4 pb-8 border-2 border-${this.props.color}-400 space-y-3 h-full shadow-lg`}>\n                <p className=\"text-center font-bold text-md m-0 p-0 text-gray-600\">\n                    {this.props.title}\n                </p>\n                {classes}\n            </div>\n        );\n    }\n\n}\n\nexport default Quarter;","import React from 'react';\nimport Quarter from './Quarter.js';\nimport Utility from './Utility.js';\n\nclass Year extends React.Component {\n\n    render() {\n\n        let content = this.props.content;\n\n        let quarters = [];\n        if (content) {\n            quarters = content.map((quarter, index) => {\n                let {title, color} = Utility.convertQuarter(index);\n                return <Quarter title={title} color={color} content={quarter} key={index}\n                delClass={courseIndex => {\n                    this.props.delClass(courseIndex, index);\n                }}/>\n            })\n        }\n\n        return (\n\n            <div className=\"p-4 border-4 border-gray-200 rounded-lg m-5 shadow-sm bg-white\">\n                <p className=\"text-center text-2xl text-gray-300 font-bold pb-2\">\n                    {this.props.title}\n                </p>\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\">\n                    {quarters}\n                </div>\n            </div>\n\n        );\n    }\n\n}\nexport default Year;","import React from 'react';\nimport Year from './Year.js';\nimport Utility from './Utility.js';\n\nclass Content extends React.Component { \n\n    render() {\n        let content = this.props.content;\n        let years = [];\n        if (content) {\n            years = content.map((year, index) => {\n                return <Year title={Utility.convertYear(index) + ' YEAR'} content={year} key={index}\n                delClass={(courseIndex, quarter) => {\n                    this.props.delClass(courseIndex, index, quarter);\n                }}/>;\n            })\n        }\n        return (\n            <div className=\"col-span-6 block pt-20 md:pt-0\">\n                {years}\n            </div>\n        );\n    }\n}\n\nexport default Content;","import React from 'react';\nimport Utility from './Utility.js';\n\nclass SearchClass extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let prereqs = this.props.course.prereqs;\n\n        let prereq = [];\n\n        if (prereqs) {\n            for (let i = 0; i < prereqs.length; i++) {\n                let color = Utility.prereqColor(i);\n                for (let j = 0; j < prereqs[i].length; j++) {\n                    prereq.push(\n                        <div className={`bg-${color}-50 m-1 p-1 rounded-xl border border-${color}-500`} key={i + ' ' + j}>\n                            <p className={`m-0 p-0 text-xs font-light text-${color}-500`}>\n                                {prereqs[i][j]}\n                            </p>\n                        </div>\n                    )\n                }\n            }\n        }\n\n        this.state = {\n            prereq: prereq\n        }\n\n    }\n\n    render() {\n        return (\n            <div className={`p-2 rounded-lg bg-opacity-60 bg-${this.props.color}-100\n            rounded-lg border-2 border-${this.props.color}-300 border-opacity-60\n            hover:shadow-md transition ease-in-out duration-300 transform hover:-translate-y-1 m-4 cursor-pointer`}\n            onClick={() => {\n                if (this.props.select) this.props.select(this.props.course);\n            }}>\n                <p className=\"text-lg font-bold\">\n                    {this.props.course.id}\n                </p>\n                <p className=\"text-sm\">\n                    {this.props.course.name}\n                </p>\n                <p className=\"text-xs mt-4 text-gray-700\">\n                    {this.props.course.description}\n                </p>\n                {this.state.prereq.length > 0 &&\n                    <div className=\"flex flex-row flex-wrap\">\n                        {this.state.prereq}\n                    </div>\n                \n                }\n            </div>\n        )\n    }\n\n}\n\nexport default SearchClass;","function AddButton(props) {\n    return (\n        <button className={`text-center bg-white border-2 border-${props.color}-300 text-${props.color}-300 p-2 block\n        mx-auto w-2/3 rounded-md hover:border-${props.color}-500 hover:text-${props.color}-500 transition-all duration-150 my-2`} onClick={() => {\n            props.action();\n        }}>\n            {props.text}\n        </button>\n    )\n}\n\nfunction AddButtonSection(props) {\n    return (\n        <div className=\"py-4\">\n            <p className=\"text-center text-gray-500 font-bold p-2 text-sm\">\n                {props.title}\n            </p>\n\n            <AddButton text=\"Fall\" color=\"orange\" action={() => {props.action(0);}}/>\n            <AddButton text=\"Winter\" color=\"red\" action={() => {props.action(1);}}/>\n            <AddButton text=\"Spring\" color=\"emerald\" action={() => {props.action(2);}}/>\n        </div>\n    )\n}\n\n\n\nexport default function AddButtons(props) {\n\n    return (\n        <div className=\"grid grid-cols-2\">\n            <AddButtonSection title=\"FIRST YEAR\" action={quarter => {props.action(0, quarter);}}/>\n            <AddButtonSection title=\"SECOND YEAR\" action={quarter => {props.action(1, quarter);}}/>\n            <AddButtonSection title=\"THIRD YEAR\" action={quarter => {props.action(2, quarter);}}/>\n            <AddButtonSection title=\"FOURTH YEAR\" action={quarter => {props.action(3, quarter);}}/>\n        </div>\n    )\n\n}","import React from 'react';\nimport courses from './data/courses.json';\nimport SearchClass from './SearchClass.js';\nimport AddButtons from './AddButtons.js';\nimport Utility from './Utility.js';\n\nclass Search extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n            current: null\n        }\n\n    }\n\n    getResults() {\n\n        let search = this.state.search.toLowerCase();\n        if (search.length === 0) {\n            return (\n                <div className=\"text-center text-gray-600 px-4\">\n                    <p className=\"text-lg font-medium\">\n                        Find classes here.\n                    </p>\n                    <p className=\"text-sm font-light\">\n                        Search for a class to add it to your plan.\n                    </p>\n                </div>\n            )\n        }\n        if (search.length < 3) {\n            return (\n                <div className=\"text-center text-gray-600 px-4\">\n                    <p className=\"text-lg font-medium\">\n                        Keep typing...\n                    </p>\n                    <p className=\"text-sm font-light\">\n                        You'll need at least 3 characters.\n                    </p>\n                </div>\n            );\n        }\n\n        let filtered = courses.courses.filter(course => {\n            if (course.id.toLowerCase().includes(search)) return true;\n            if (course.name.toLowerCase().includes(search)) return true;\n            if (course.id.toLowerCase().replace('_', ' ').includes(search)) return true;\n            return false;\n        });\n\n        let courseList = [];\n        for (let course of filtered) {\n            courseList.push(\n                <SearchClass color={Utility.getCourseColor(course.id)} course={course} key={course.id} select={classData => {\n                    this.setState({current: classData});\n                }}/>\n            )\n        }\n        return courseList;\n\n    }\n\n    render() {\n\n        let singleClassView = false;\n\n        let searchField = (\n            <div className=\"sticky top-0 p-2 mb-2 bg-white bg-opacity-75 backdrop-filter backdrop-blur-lg z-10\">\n                <input className=\"block m-4 mx-auto w-11/12 border-2 border-gray-300 shadow-md\n                rounded-lg hover:border-gray-500 outline-none focus:border-black text-lg p-2 px-4\n                bg-white\" value={this.state.search} placeholder=\"Search for classes...\" onChange={event => {\n                    this.setState({search: event.target.value})\n                }}/>\n            </div>\n        )\n        \n        let selectedClass = null;\n        let addButtons = null;\n        let exitButton = null;\n\n        if (this.state.current) {\n            singleClassView = true;\n\n            selectedClass = (\n                <SearchClass color={Utility.getCourseColor(this.state.current.id)} course={this.state.current}/>\n            )\n\n            addButtons = (\n                    <AddButtons action={(year, quarter) => {\n                        this.props.addCourse(this.state.current, year, quarter);\n                        this.setState({current: null});\n                    }}/>\n            )\n            exitButton = (\n                <button className=\"block mx-auto bg-white border-2 border-gray-400 text-gray-400\n                w-2/3 p-2 my-4 hover:border-black hover:text-black transition-all duration-150 rounded-md\" onClick={() => {\n                    this.setState({current: null});\n                }}>\n                    Back\n                </button>\n            );\n        }\n\n\n        return (\n            <div className=\"border-4 border-black my-2 rounded-xl shadow-lg h-5/6\n            overflow-scroll overscroll-contain\">\n                {!singleClassView && searchField}\n                {!singleClassView && this.getResults()}\n\n                {singleClassView && selectedClass}\n                {singleClassView && addButtons}\n                {singleClassView && exitButton}\n\n            </div>\n        )\n    }\n\n}\n\nexport default Search;","import React from 'react';\n\nclass Info extends React.Component {\n\n    render() {\n        return (\n            <div className=\"my-4 px-4 text-black overflow-hidden whitespace-nowrap\">\n                <p className=\"text-lg font-bold text-purple-800\">\n                    Plan Northwestern (name still tbd)\n                </p>\n                <p className=\"text-sm\">\n                    {this.props.version}\n                </p>\n                <p className=\"text-xs\">\n                    This info part of the UI is still in dev lol\n                </p>\n            </div>\n        )\n    }\n\n}\n\nexport default Info;","import React from 'react';\nimport { SaveIcon, ClipboardListIcon, InformationCircleIcon } from '@heroicons/react/outline';\n\nfunction TaskBarButton(props) {\n    return (\n        <button className={`border-2 rounded-md border-gray-400 bg-gray-50 text-gray-600\n        hover:border-${props.color}-500 hover:bg-${props.color}-50 hover:text-${props.color}-500\n        transition-all duration-150`} onClick={() => {\n            props.action();\n        }}>\n            {props.name}\n        </button>\n    )\n}\n\nclass TaskBar extends React.Component {\n\n    render() {\n        return (\n\n            <div className=\"grid grid-cols-3 px-4 gap-4 text-xs\">\n\n                <TaskBarButton name=\"About\" color=\"purple\" action={() => {\n\n                    this.props.alert({\n                        title: 'Plan Northwestern',\n                        subtitle: `version ${this.props.version} by Dilan N`,\n                        message: 'An easy and organized way to plan out your classes at Northwestern. Data is all saved in the URL, so save the link to your plan to access it later or share with friends. Currently in beta. Notice any errors with classes? Check out the GitHub repository for instructions on reporting/fixing.',\n                        confirmButton: 'View on GitHub',\n                        confirmButtonColor: 'purple',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'purple',\n                        icon: (<InformationCircleIcon className=\"h-6 w-6 text-purple-600\" aria-hidden=\"true\" />),\n                        action: () => {\n                            window.open('https://github.com/dilanx', '_blank');\n                        }\n\n                    })\n\n                }}/>\n\n                <TaskBarButton name=\"Save / Share\" color=\"emerald\" action={() => {\n                    this.props.alert({\n                        title: 'Ready to share!',\n                        message: 'All of your plan data is stored in the URL. When you make changes to your plan, the URL is updated to reflect those changes. Save it somewhere, or share with a friend!',\n                        confirmButton: 'Copy to clipboard',\n                        confirmButtonColor: 'emerald',\n                        cancelButton: 'Close',\n                        iconBackgroundColor: 'emerald',\n                        icon: (<SaveIcon className=\"h-6 w-6 text-emerald-600\" aria-hidden=\"true\" />),\n                        textView: window.location.href,\n                        action: () => {\n                            navigator.clipboard.writeText(window.location.href);\n                        }\n                    });\n                }}/>\n\n                <TaskBarButton name=\"Settings\" color=\"blue\" action={() => {\n                    this.props.alert({\n                        title: 'Coming soon!',\n                        message: `Features like summer classes, more than 4 years, and more are coming soon. Oh also, I found this cool library for drag-and-drop online so I hope to make it possible to drag courses into the quarter you want.`,\n                        confirmButton: 'Close',\n                        confirmButtonColor: 'blue',\n                        iconBackgroundColor: 'blue',\n                        icon: (<ClipboardListIcon className=\"h-6 w-6 text-blue-600\" aria-hidden=\"true\" />)\n                    })\n                }}/>\n\n                \n\n\n            </div>\n        )\n    }\n\n}\n\nexport default TaskBar;","import { useState, useRef } from 'react'\nimport { Dialog } from '@headlessui/react'\n\nexport default function Alert(props) {\n\n    let [isOpen, setIsOpen] = useState(true)\n\n    let cancelButtonRef = useRef(null);\n\n    function close() {\n        setIsOpen(false);\n        props.onClose();\n    }\n\n    function confirm() {\n        setIsOpen(false);\n        props.onConfirm();\n    }\n\n    let data = props.data;\n\n    return (\n        <Dialog open={isOpen} onClose={() => {close()}} initialFocus={cancelButtonRef} className=\"fixed z-10 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                    &#8203;\n                </span>\n                <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\"/>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                    <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                        <div className=\"sm:flex sm:items-start\">\n                            <div className={`mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-${data.iconBackgroundColor}-100 sm:mx-0 sm:h-10 sm:w-10`}>\n                                {data.icon}\n                            </div>\n                            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                                <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                    {data.title}\n                                </Dialog.Title>\n\n                                {data.subtitle &&\n                                    <div>\n                                        <p className=\"text-md font-light text-gray-900\">\n                                            {data.subtitle}\n                                        </p>\n                                    </div>\n                                }\n                                <div className=\"mt-2\">\n                                    <p className=\"text-sm text-gray-500\">\n                                    {data.message}\n                                    </p>\n                                </div>\n                                {data.textView &&\n                                    <div>\n                                        <p className=\"bg-gray-200 mt-4 p-1 px-4 font-mono text-sm rounded-md md:w-96 overflow-scroll whitespace-nowrap overscroll-contain\">\n                                            {data.textView}\n                                        </p>\n                                    </div>\n                                }\n                            </div>\n                                \n                        </div>\n                    </div>\n\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button\n                            type=\"button\"\n                            className={`w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-${data.confirmButtonColor}-500 text-base font-medium text-white\n                            hover:bg-${data.confirmButtonColor}-600 focus:bg-${data.confirmButtonColor}-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm`}\n                            onClick={() => {confirm();}}>\n                            {data.confirmButton}\n                        </button>\n                        {data.cancelButton && <button\n                            ref={cancelButtonRef}\n                            type=\"button\"\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2\n                            bg-white text-base font-medium text-gray-700 hover:bg-gray-100 focus:bg-gray-200 focus:outline-none sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                            onClick={() => {close();}}>\n                            {data.cancelButton}\n                        </button>}\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    )\n\n}","\nimport React from 'react';\nimport Content from './Content.js';\nimport Search from './Search.js';\nimport Utility from './Utility.js';\nimport Info from './Info.js';\nimport TaskBar from './TaskBar.js';\nimport Alert from './Alert.js';\n\nimport { ExclamationIcon } from '@heroicons/react/outline';\n\nconst VERSION = '1.0 beta';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let data = [[[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        let failed = false;\n        params.forEach((val, key, par) => {\n            if (key.startsWith('y')) {\n                if (failed) return;\n                let newData = Utility.loadData(key, val, data);\n                if (newData == null) {\n                    failed = true;\n                    return;\n                }\n                data = newData;\n            }\n        })\n\n        if (failed) {\n            console.log('failed');\n        }\n\n        this.state = {\n            data: data,\n            alert: null\n\n        }\n\n    }\n\n    showAlert(alertData) {\n        this.setState({\n            alert: alertData\n        })\n    }\n\n    postShowAlert() {\n        this.setState({\n            alert: null\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n\n            {this.state.alert &&\n                <Alert data={this.state.alert}\n                    onClose={() => {\n                        this.postShowAlert();\n                    }}\n                    onConfirm={() => {\n                        if (this.state.alert.action) {\n                            this.state.alert.action();\n                        }\n                        this.postShowAlert();\n                    }\n            }/>}\n\n                <div className=\"grid grid-cols-1 md:grid-cols-8\">\n                    <div className=\"col-span-2 px-4 block md:sticky top-0 h-96 md:h-screen \">\n                        <Info version={VERSION}/>\n                        <TaskBar alert={alertData => {\n                            this.showAlert(alertData)\n                        }} version={VERSION}/>\n                        <Search addCourse={(course, year, quarter) => {\n                            let data = this.state.data;\n                            let fulfilledPrereqs = Utility.checkPrereq(course, year, quarter, data);\n\n                            if (!fulfilledPrereqs) {\n                                this.showAlert({\n                                    title: 'Missing prerequisite courses.',\n                                    message: `You can't take this course that quarter without taking the necessary prerequisites in previous quarters. Make sure you have all prereqs of a certain color in your plan.`,\n                                    cancelButton: 'Go back',\n                                    confirmButton: 'Add anyway',\n                                    confirmButtonColor: 'red',\n                                    iconBackgroundColor: 'red',\n                                    icon: (<ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />),\n                                    action: () => {\n                                        data[year][quarter].push(course);\n                                        data[year][quarter].sort((a, b) => {\n                                            return a.id.localeCompare(b.id);\n                                        });\n                                        this.setState({data: data});\n                                        Utility.saveData(data);\n                                    }\n\n                                })\n                            } else {\n                                data[year][quarter].push(course);\n                                data[year][quarter].sort((a, b) => {\n                                    return a.id.localeCompare(b.id);\n                                });\n                                this.setState({data: data});\n                                Utility.saveData(data);\n                            }\n\n                            \n                        }}/>\n                    </div>\n                    \n                    <Content content={this.state.data} delClass={(courseIndex, year, quarter) => {\n                        let data = this.state.data;\n                        data[year][quarter].splice(courseIndex, 1);\n                        this.setState({data: data});\n                        Utility.saveData(data);\n                    }}/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}